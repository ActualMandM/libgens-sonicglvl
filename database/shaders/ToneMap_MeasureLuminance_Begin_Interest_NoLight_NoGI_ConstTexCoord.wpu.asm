//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_MiddleGray_Scale_LuminanceLow_LuminanceHigh;
//   float4 g_ViewportSize;
//   float4 mrgToneMapTextureMatrix;
//   sampler2D sampDif0;
//   sampler2D sampDif1;
//
//
// Registers:
//
//   Name                                          Reg   Size
//   --------------------------------------------- ----- ----
//   g_ViewportSize                                c24      1
//   g_MiddleGray_Scale_LuminanceLow_LuminanceHigh c150     1
//   mrgToneMapTextureMatrix                       c151     1
//   sampDif0                                      s0       1
//   sampDif1                                      s1       1
//

    ps_3_0
    def c0, 0.212500006, 0.715399981, 0.0720999986, 9
    def c1, -0.333333343, 0, 9.99999975e-005, 1
    def c2, 0.693147182, 9.21033955, -1, 1
    def c3, 1, 0, 0.999899983, -9.99999975e-005
    def c4, 0.333333343, -0.333333343, 0, 0
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov_sat r0.xyz, r0
    dp3 r0.x, r0, c0
    max r1.x, r0.x, c150.z
    min r0.x, c150.w, r1.x
    add r0.x, r0.x, c1.z
    log r0.x, r0.x
    mad r0.x, r0.x, c2.x, c2.y
    mov r0.zw, c24
    mad r1, r0.zwzw, c4.xyyz, v0.xyxy
    texld r2, r1.zwzw, s0
    texld r1, r1, s0
    mov_sat r1.xyz, r1
    dp3 r0.y, r1, c0
    max r1.x, r0.y, c150.z
    min r0.y, c150.w, r1.x
    add r0.y, r0.y, c1.z
    log r0.y, r0.y
    mad r0.y, r0.y, c2.x, c2.y
    mov_sat r2.xyz, r2
    dp3 r1.x, r2, c0
    max r2.x, r1.x, c150.z
    min r1.x, c150.w, r2.x
    add r1.x, r1.x, c1.z
    log r1.x, r1.x
    mad r1.x, r1.x, c2.x, c2.y
    mad r2, r0.zwzw, c1.xxyx, v0.xyxy
    texld r3, r2, s0
    texld r2, r2.zwzw, s0
    mov_sat r2.xyz, r2
    dp3 r1.y, r2, c0
    max r2.x, r1.y, c150.z
    min r1.y, c150.w, r2.x
    add r1.y, r1.y, c1.z
    log r1.y, r1.y
    mad r1.y, r1.y, c2.x, c2.y
    mov_sat r3.xyz, r3
    dp3 r1.z, r3, c0
    max r2.x, r1.z, c150.z
    min r1.z, c150.w, r2.x
    add r1.z, r1.z, c1.z
    log r1.z, r1.z
    mad r1.z, r1.z, c2.x, c2.y
    mad r2.xy, c151, v0, c151.zwzw
    texld_pp r2, r2, s1
    mov r2.zw, c2
    mad r3, r2.y, r2.zwzw, c3
    mul_pp r1.w, r2.y, c1.w
    mad_pp oC0.zw, r1.w, c1.xywy, c1.xyyw
    mul r1.yw, r1.y, r3.xxzy
    mad r1.yz, r1.z, r3.xxyw, r1.xyww
    mad r1.yz, r0.y, r3.xxyw, r1
    mad r1.xy, r1.x, r3, r1.yzzw
    mad r0.xy, r0.x, r3, r1
    mad r1, r0.zwzw, c4.xzyx, v0.xyxy
    texld r2, r1, s0
    texld r1, r1.zwzw, s0
    mov_sat r1.xyz, r1
    dp3 r1.x, r1, c0
    max r2.w, r1.x, c150.z
    min r1.x, c150.w, r2.w
    add r1.x, r1.x, c1.z
    log r1.x, r1.x
    mad r1.x, r1.x, c2.x, c2.y
    mov_sat r2.xyz, r2
    dp3 r1.y, r2, c0
    max r2.x, r1.y, c150.z
    min r1.y, c150.w, r2.x
    add r1.y, r1.y, c1.z
    log r1.y, r1.y
    mad r1.y, r1.y, c2.x, c2.y
    mad r0.xy, r1.y, r3, r0
    mad r0.xy, r1.x, r3, r0
    mad r1, r0.zwzw, c1_abs.yxxx, v0.xyxy
    texld r2, r1, s0
    texld r1, r1.zwzw, s0
    mov_sat r1.xyz, r1
    dp3 r0.z, r1, c0
    max r1.x, r0.z, c150.z
    min r0.z, c150.w, r1.x
    add r0.z, r0.z, c1.z
    log r0.z, r0.z
    mad r0.z, r0.z, c2.x, c2.y
    mov_sat r2.xyz, r2
    dp3 r0.w, r2, c0
    max r1.x, r0.w, c150.z
    min r0.w, c150.w, r1.x
    add r0.w, r0.w, c1.z
    log r0.w, r0.w
    mad r0.w, r0.w, c2.x, c2.y
    mad r0.xy, r0.w, r3, r0
    mad r0.xy, r0.z, r3, r0
    cmp r0.zw, r3, -c1.w, -c1.y
    add r0.zw, r0, r3.xyxy
    add r0.zw, r0, c1.w
    mul r0.zw, r0, c0.w
    rcp r1.x, r0.z
    rcp r1.y, r0.w
    mul_pp oC0.xy, r0, r1

// approximately 99 instruction slots used (10 texture, 89 arithmetic)
