//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   row_major float4x4 g_MtxInvProjection;
//   row_major float4x4 g_MtxLightViewProjection;
//   row_major float4x4 g_MtxVerticalLightViewProjection;
//   float4 g_ShadowMapParams;
//   sampler2D g_ShadowMapSampler;
//   sampler2D g_VerticalShadowMapSampler;
//   float4 g_ViewportSize;
//   sampler2D s0;
//   sampler2D s1;
//
//
// Registers:
//
//   Name                             Reg   Size
//   -------------------------------- ----- ----
//   g_MtxInvProjection               c4       4
//   g_ViewportSize                   c24      1
//   g_ShadowMapParams                c65      1
//   g_MtxLightViewProjection         c98      4
//   g_MtxVerticalLightViewProjection c102     4
//   s0                               s0       1
//   s1                               s1       1
//   g_VerticalShadowMapSampler       s7       1
//   g_ShadowMapSampler               s13      1
//

    ps_3_0
    def c0, 0, 500, 1024, 0
    def c1, 2, -1, 0.5, -0.5
    dcl_texcoord_pp v0.xyz
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4_pp v4.xyz
    dcl_texcoord5_pp v5.xyz
    dcl_texcoord6_pp v6.xyz
    dcl_texcoord7_pp v7.xyz
    dcl_texcoord8_pp v8
    dcl_texcoord9_pp v9
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s7
    dcl_2d s13
    add r0.xy, c24, vPos
    mul r0.xy, r0, c24.zwzw
    mad r0.zw, r0.xyxy, c1.x, c1.y
    mul r1, -r0.w, c5
    mad r1, r0.z, c4, r1
    texld r2, r0, s0
    texld_pp r0, r0, s1
    mad r1, r2.x, c6, r1
    add r1, r1, c7
    rcp r1.w, r1.w
    mul_pp r2.xyz, r1.w, r1
    mul r3, r2.y, c103
    mad r3, r2.x, c102, r3
    mad r3, r2.z, c104, r3
    add_pp r3, r3, c105
    max_pp r2.w, r3.z, c0.x
    add r4.x, -r3.w, r2.w
    cmp_pp r3.z, r4.x, c0.x, r2.w
    mul_pp r4.xyz, r3.xyww, c1.zwzw
    add_pp r3.xy, r4.z, r4
    texldp_pp r3, r3, s7
    mov_pp r3.y, r3.x
    mul r4, r2.y, c99
    mad r4, r2.x, c98, r4
    mad r4, r2.z, c100, r4
    nrm_pp r5.xyz, -r2
    add_pp r2, r4, c101
    max_pp r3.z, r2.z, c0.x
    add r2.z, -r2.w, r3.z
    cmp_pp r4.z, r2.z, c0.x, r3.z
    mov_pp r4.w, r2.w
    mul_pp r2.xyz, r2.xyww, c1.zwzw
    rcp r2.w, r4.w
    add_pp r4.xy, r2.z, r2
    texldp_pp r6, r4, s13
    mul_pp r2.xy, r2.w, r4
    mad r2.xy, r2, c1.x, c1.y
    abs_sat_pp r2.xy, r2
    add_sat r2.xy, r2, -c65.x
    mul_pp r2.xy, r2, c65.y
    max_pp r3.z, r2.x, r2.y
    mov_pp r3.x, r6.x
    add_pp r2.xy, -r3, -c1.y
    mad_pp oC0.xy, r3.z, r2, r3
    mad_pp r2.xyz, r1, -r1.w, v0
    dp3_pp r2.w, r2, r2
    rsq_pp r2.w, r2.w
    rcp_pp r3.x, r2.w
    mad_pp r4.xyz, r1, -r1.w, v1
    dp3_pp r4.w, r4, r4
    rsq_pp r4.w, r4.w
    rcp_pp r3.y, r4.w
    mad_pp r6.xyz, r1, -r1.w, v2
    mad_pp r1.xyz, r1, -r1.w, v3
    dp3_pp r1.w, r6, r6
    rsq_pp r1.w, r1.w
    rcp_pp r3.z, r1.w
    dp3_pp r5.w, r1, r1
    rsq_pp r5.w, r5.w
    rcp_pp r3.w, r5.w
    add_pp r3, r3, -v9
    mul_sat_pp r3, r3, v8
    add_pp r3, -r3, -c1.y
    mul_pp r7.xyz, r2.w, r2
    mad_pp r2.xyz, r2, r2.w, r5
    nrm_pp r8.xyz, r2
    mad_pp r0.xyz, r0, c1.x, c1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r0.w, c0.y
    max_pp r2.x, r0.w, -c1.y
    min_pp r0.w, r2.x, c0.z
    dp3_sat_pp r2.x, r0, r7
    mul_pp r7.xyz, r4.w, r4
    mad_pp r4.xyz, r4, r4.w, r5
    nrm_pp r9.xyz, r4
    dp3_sat_pp r4.x, r9, r0
    pow_pp r6.w, r4.x, r0.w
    mul_pp r4.xyz, r6.w, v5
    mul_pp r4.xyz, r3.y, r4
    dp3_sat_pp r2.y, r0, r7
    mul_pp r7.xyz, r1.w, r6
    mad_pp r6.xyz, r6, r1.w, r5
    mad_pp r5.xyz, r1, r5.w, r5
    mul_pp r1.xyz, r1, r5.w
    dp3_sat_pp r2.w, r0, r1
    nrm_pp r1.xyz, r5
    dp3_sat_pp r1.x, r1, r0
    pow_pp r4.w, r1.x, r0.w
    mul_pp r1.xyz, r4.w, v7
    nrm_pp r5.xyz, r6
    dp3_sat_pp r1.w, r5, r0
    pow_pp r4.w, r1.w, r0.w
    mul_pp r5.xyz, r4.w, v6
    dp3_sat_pp r2.z, r0, r7
    dp3_sat_pp r0.x, r8, r0
    pow_pp r1.w, r0.x, r0.w
    mul_pp r0.xyz, r1.w, v4
    mad_pp r0.xyz, r0, r3.x, r4
    mad_pp r0.xyz, r5, r3.z, r0
    mad_pp r0.xyz, r1, r3.w, r0
    mul_pp r1, r3, r2
    mul_pp r2.xyz, r1.y, v5
    mad_pp r2.xyz, r1.x, v4, r2
    mad_pp r1.xyz, r1.z, v6, r2
    mad_pp oC1.xyz, r1.w, v7, r1
    mov_pp oC0.zw, r0.xyxy
    mov_pp oC1.w, r0.z

// approximately 125 instruction slots used (4 texture, 121 arithmetic)
