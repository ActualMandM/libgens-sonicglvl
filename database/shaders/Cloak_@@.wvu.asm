//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_EyePosition;
//   row_major float3x4 g_MtxPalette[25];
//   row_major float4x4 g_MtxProjection;
//   row_major float4x4 g_MtxView;
//   row_major float4x4 g_MtxWorld;
//   bool mrgHasBone;
//   float4 mrgTexcoordOffset[2];
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   mrgHasBone        b0       1
//   g_MtxProjection   c0       4
//   g_MtxView         c4       4
//   g_MtxWorld        c8       4
//   g_MtxPalette      c28     75
//   g_EyePosition     c178     1
//   mrgTexcoordOffset c191     1
//

    vs_3_0
    def c12, 3, 1, 0, 0
    dcl_position v0
    dcl_texcoord v1
    dcl_normal v2
    dcl_blendweight v3
    dcl_blendindices v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    if b0
      mul r0, c12.x, v4
      mova a0, r0.yxzw
      mul r1, v3.y, c30[a0.x]
      mad r1, c30[a0.y], v3.x, r1
      mad r1, c30[a0.z], v3.z, r1
      add r0.x, v3.y, v3.x
      add r0.x, r0.x, v3.z
      add r0.x, -r0.x, c12.y
      mad r1, c30[a0.w], r0.x, r1
      dp4 r0.y, r1, v0
      dp3 r0.z, r1, v2
      mul r1, v3.y, c28[a0.x]
      mad r1, c28[a0.y], v3.x, r1
      mad r1, c28[a0.z], v3.z, r1
      mad r1, c28[a0.w], r0.x, r1
      dp4 r0.w, r1, v0
      dp3 r1.x, r1, v2
      mul r2, v3.y, c29[a0.x]
      mad r2, c29[a0.y], v3.x, r2
      mad r2, c29[a0.z], v3.z, r2
      mad r2, c29[a0.w], r0.x, r2
      dp4 r0.x, r2, v0
      dp3 r1.y, r2, v2
      mov r1.z, v0.w
    else
      mov r0.xyw, v0.yzzx
      mov r1.z, v0.w
      mov r1.xy, v2
      mov r0.z, v2.z
    endif
    mul r2, r0.x, c9
    mad r2, r0.w, c8, r2
    mad r2, r0.y, c10, r2
    mad r2, r1.z, c11, r2
    mul r0.xyw, r1.y, c9.xyzz
    mad r0.xyw, r1.x, c8.xyzz, r0
    mad r0.xyz, r0.z, c10, r0.xyww
    nrm r1.xyz, r0
    add r3.xyz, -r2, c178
    nrm r4.xyz, r3
    dp3_sat r0.w, r1, r4
    mul r1, r2.y, c5
    mad r1, r2.x, c4, r1
    mad r1, r2.z, c6, r1
    mad r1, r2.w, c7, r1
    mul r2, r1.y, c1
    mad r2, r1.x, c0, r2
    mad r2, r1.z, c2, r2
    mad o0, r1.w, c3, r2
    mul r1.xyz, r0.y, c5
    mad r1.xyz, r0.x, c4, r1
    mad o2.xyz, r0.z, c6, r1
    add o1.zw, r0.w, c191.xyxy
    mov o1.xy, v1

// approximately 61 instruction slots used
