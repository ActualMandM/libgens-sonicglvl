//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_ViewportSize;
//   float4 mrgToneMapWeightParam;
//   sampler2D sampDif0;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   g_ViewportSize        c24      1
//   mrgToneMapWeightParam c152     1
//   sampDif0              s0       1
//

    ps_3_0
    def c0, 1, 0, -0, -9.21033955
    def c1, 1.44269502, 0, 0, 0
    def c2, -0.375, -0.125, -9.99999975e-005, -0.5
    def c3, 0.125, -0.375, 0.375, -0.125
    dcl_texcoord v0.xy
    dcl_2d s0
    mov r0.xy, c2
    mad r1, c24.zwzw, r0.xxyx, v0.xyxy
    texld r2, r1, s0
    texld r1, r1.zwzw, s0
    add r0.zw, r2.xyxy, c2.z
    cmp r0.zw, r0, c0.x, c0.y
    mad r1.z, r0.z, r0.w, c2.w
    cmp r1.w, r1.z, -r2.x, c0.z
    cmp r0.z, r1.z, c0.y, r0.z
    add r3.y, r1.w, r2.x
    mov r3.z, r2.y
    add r2.yz, r1.xxyw, r3
    add r1.yz, r1.xxyw, c2.z
    cmp r1.yz, r1, c0.x, c0.y
    mad r1.w, r1.y, r1.z, c2.w
    cmp r1.x, r1.w, -r1.x, c0.z
    cmp r1.y, r1.w, c0.y, r1.y
    add r0.zw, r0, r1.xyyz
    add r2.x, r1.x, r2.y
    mov r1.zw, c24
    mad r3, r1.zwzw, c3.xyzy, v0.xyxy
    texld r4, r3, s0
    texld r3, r3.zwzw, s0
    add r2.yz, r2.xxzw, r4.xxyw
    add r1.xy, r4, c2.z
    cmp r1.xy, r1, c0.x, c0.y
    mad r2.w, r1.x, r1.y, c2.w
    cmp r3.z, r2.w, -r4.x, c0.z
    cmp r1.x, r2.w, c0.y, r1.x
    add r0.zw, r0, r1.xyxy
    add r2.x, r2.y, r3.z
    add r2.yz, r3.xxyw, r2.xxzw
    add r1.xy, r3, c2.z
    cmp r1.xy, r1, c0.x, c0.y
    mad r2.w, r1.x, r1.y, c2.w
    cmp r3.x, r2.w, -r3.x, c0.z
    cmp r1.x, r2.w, c0.y, r1.x
    add r0.zw, r0, r1.xyxy
    add r2.x, r2.y, r3.x
    mad r3, c24.zwzw, r0.xyyy, v0.xyxy
    texld r4, r3, s0
    texld r3, r3.zwzw, s0
    add r2.yz, r2.xxzw, r4.xxyw
    add r1.xy, r4, c2.z
    cmp r1.xy, r1, c0.x, c0.y
    mad r2.w, r1.x, r1.y, c2.w
    cmp r3.z, r2.w, -r4.x, c0.z
    cmp r1.x, r2.w, c0.y, r1.x
    add r0.zw, r0, r1.xyxy
    add r2.x, r2.y, r3.z
    add r2.yz, r3.xxyw, r2.xxzw
    add r1.xy, r3, c2.z
    cmp r1.xy, r1, c0.x, c0.y
    mad r2.w, r1.x, r1.y, c2.w
    cmp r3.x, r2.w, -r3.x, c0.z
    cmp r1.x, r2.w, c0.y, r1.x
    add r0.zw, r0, r1.xyxy
    add r2.x, r2.y, r3.x
    mad r3, r1.zwzw, c3.xwzw, v0.xyxy
    texld r4, r3, s0
    texld r3, r3.zwzw, s0
    add r2.yz, r2.xxzw, r4.xxyw
    add r1.xy, r4, c2.z
    cmp r1.xy, r1, c0.x, c0.y
    mad r2.w, r1.x, r1.y, c2.w
    cmp r3.z, r2.w, -r4.x, c0.z
    cmp r1.x, r2.w, c0.y, r1.x
    add r0.zw, r0, r1.xyxy
    add r2.x, r2.y, r3.z
    add r2.yz, r3.xxyw, r2.xxzw
    add r1.xy, r3, c2.z
    cmp r1.xy, r1, c0.x, c0.y
    mad r2.w, r1.x, r1.y, c2.w
    cmp r3.x, r2.w, -r3.x, c0.z
    cmp r1.x, r2.w, c0.y, r1.x
    add r0.zw, r0, r1.xyxy
    add r2.x, r2.y, r3.x
    mad r3, r1.zwzw, c3.yxwx, v0.xyxy
    texld r4, r3, s0
    texld r3, r3.zwzw, s0
    add r2.yz, r2.xxzw, r4.xxyw
    add r1.xy, r4, c2.z
    cmp r1.xy, r1, c0.x, c0.y
    mad r2.w, r1.x, r1.y, c2.w
    cmp r3.z, r2.w, -r4.x, c0.z
    cmp r1.x, r2.w, c0.y, r1.x
    add r0.zw, r0, r1.xyxy
    add r2.x, r2.y, r3.z
    add r2.yz, r3.xxyw, r2.xxzw
    add r1.xy, r3, c2.z
    cmp r1.xy, r1, c0.x, c0.y
    mad r2.w, r1.x, r1.y, c2.w
    cmp r3.x, r2.w, -r3.x, c0.z
    cmp r1.x, r2.w, c0.y, r1.x
    add r0.zw, r0, r1.xyxy
    add r2.x, r2.y, r3.x
    mad r3, c24.zwzw, -r0.yyxy, v0.xyxy
    texld r4, r3, s0
    texld r3, r3.zwzw, s0
    add r2.yz, r2.xxzw, r4.xxyw
    add r1.xy, r4, c2.z
    cmp r1.xy, r1, c0.x, c0.y
    mad r2.w, r1.x, r1.y, c2.w
    cmp r3.z, r2.w, -r4.x, c0.z
    cmp r1.x, r2.w, c0.y, r1.x
    add r0.zw, r0, r1.xyxy
    add r2.x, r2.y, r3.z
    add r2.yz, r3.xxyw, r2.xxzw
    add r1.xy, r3, c2.z
    cmp r1.xy, r1, c0.x, c0.y
    mad r2.w, r1.x, r1.y, c2.w
    cmp r3.x, r2.w, -r3.x, c0.z
    cmp r1.x, r2.w, c0.y, r1.x
    add r0.zw, r0, r1.xyxy
    add r2.x, r2.y, r3.x
    mad r1, r1.zwzw, c3.yzwz, v0.xyxy
    texld r3, r1, s0
    texld r1, r1.zwzw, s0
    add r2.yz, r2.xxzw, r3.xxyw
    add r1.zw, r3.xyxy, c2.z
    cmp r1.zw, r1, c0.x, c0.y
    mad r2.w, r1.z, r1.w, c2.w
    cmp r3.x, r2.w, -r3.x, c0.z
    cmp r1.z, r2.w, c0.y, r1.z
    add r0.zw, r0, r1
    add r2.x, r2.y, r3.x
    add r2.yz, r1.xxyw, r2.xxzw
    add r1.yz, r1.xxyw, c2.z
    cmp r1.yz, r1, c0.x, c0.y
    mad r1.w, r1.y, r1.z, c2.w
    cmp r1.x, r1.w, -r1.x, c0.z
    cmp r1.y, r1.w, c0.y, r1.y
    add r0.zw, r0, r1.xyyz
    add r2.x, r1.x, r2.y
    mad r1, c24.zwzw, -r0.yxxx, v0.xyxy
    texld r3, r1, s0
    texld r1, r1.zwzw, s0
    add r2.yz, r2.xxzw, r3.xxyw
    add r0.xy, r3, c2.z
    cmp r0.xy, r0, c0.x, c0.y
    mad r1.z, r0.x, r0.y, c2.w
    cmp r1.w, r1.z, -r3.x, c0.z
    cmp r0.x, r1.z, c0.y, r0.x
    add r0.xy, r0, r0.zwzw
    add r2.x, r1.w, r2.y
    add r2.yz, r1.xxyw, r2.xxzw
    add r0.zw, r1.xyxy, c2.z
    cmp r0.zw, r0, c0.x, c0.y
    mad r1.y, r0.z, r0.w, c2.w
    cmp r1.x, r1.y, -r1.x, c0.z
    cmp r0.z, r1.y, c0.y, r0.z
    add r3.xy, r0.zwzw, r0
    max r0.xy, c0.x, r3
    add r2.x, r1.x, r2.y
    rcp r1.x, r0.x
    rcp r1.y, r0.y
    mad r0.xy, r2.xzzw, r1, c0.w
    mul r0.xy, r0, c1.x
    exp r0.y, r0.y
    exp r0.x, r0.x
    add r0.y, -r0.x, r0.y
    mad_pp oC0.xy, c152.x, r0.y, r0.x
    mov_pp oC0.zw, c0.xyyx

// approximately 163 instruction slots used (16 texture, 147 arithmetic)
