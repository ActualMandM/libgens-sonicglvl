//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_Ambient;
//   float4 g_Diffuse;
//   float4 g_EyeDirection;
//   float4 g_EyePosition;
//   float4 g_ForceAlphaColor;
//   float4 g_GI0Scale;
//   float4 g_GI1Scale;
//   sampler2D g_GISampler;
//   float4 g_LightScatteringColor;
//   float4 g_ShadowMapParams;
//   sampler2D g_ShadowMapSampler;
//   sampler2D g_VerticalShadowMapSampler;
//   float4 mrgEyeLight_Attribute;
//   float4 mrgEyeLight_Diffuse;
//   float4 mrgEyeLight_Range;
//   float4 mrgGlobalLight_Diffuse;
//   float4 mrgGlobalLight_Direction;
//   float4 mrgTexcoordIndex[4];
//   sampler2D sampBlend;
//   sampler2D sampDif0;
//   sampler2D sampDif1;
//   sampler2D sampNrm0;
//   sampler2D sampNrm1;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   mrgGlobalLight_Direction   c10      1
//   g_Diffuse                  c16      1
//   g_Ambient                  c17      1
//   g_EyePosition              c22      1
//   g_EyeDirection             c23      1
//   mrgTexcoordIndex           c26      2
//   mrgGlobalLight_Diffuse     c36      1
//   mrgEyeLight_Diffuse        c58      1
//   mrgEyeLight_Range          c60      1
//   mrgEyeLight_Attribute      c61      1
//   g_ShadowMapParams          c65      1
//   g_GI0Scale                 c70      1
//   g_GI1Scale                 c71      1
//   g_LightScatteringColor     c75      1
//   g_ForceAlphaColor          c89      1
//   sampDif0                   s0       1
//   sampDif1                   s1       1
//   sampNrm0                   s4       1
//   sampNrm1                   s5       1
//   sampBlend                  s6       1
//   g_VerticalShadowMapSampler s7       1
//   g_GISampler                s10      1
//   g_ShadowMapSampler         s13      1
//

    ps_3_0
    def c0, 2, -1, -2, 3
    def c1, 0.298900008, 0.586600006, 0.114399999, 4
    def c2, 0, 1, 2, 3
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_texcoord4 v4
    dcl_texcoord6 v5
    dcl_texcoord5_pp v6.xyz
    dcl_texcoord7 v7.xyz
    dcl_texcoord8 v8.xyz
    dcl_color_pp v9
    dcl_2d s0
    dcl_2d s1
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s7
    dcl_2d s10
    dcl_2d s13
    add_pp r0.x, -c61.z, c61.y
    rcp_pp r0.x, r0.x
    add r0.yzw, -c22.xxyz, v2.xxyz
    dp3 r1.x, r0.yzww, r0.yzww
    rsq r1.x, r1.x
    mul_pp r0.yzw, r0, r1.x
    rcp r1.x, r1.x
    add r1.x, r1.x, -c60.z
    dp3_pp r1.y, r0.yzww, c23
    add_pp r1.y, r1.y, -c61.z
    mul_sat_pp r0.x, r0.x, r1.y
    mad_pp r1.y, r0.x, c0.z, c0.w
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r0.x, r1.y
    pow_sat_pp r1.y, r0.x, c61.w
    mov r2.xy, c2
    add r0.x, r2.y, -c61.x
    cmp_pp r0.x, r0.x, c2.y, r1.y
    add r1.y, -c60.z, c60.w
    rcp r1.y, r1.y
    mul_sat r1.x, r1.y, r1.x
    add_pp r1.x, -r1.x, c2.y
    cmp_pp r1.x, -c61.x, r2.y, r1.x
    mul_pp r0.x, r0.x, r1.x
    frc r1.xyz, c27
    cmp r2.yzw, -r1.xxyz, c2.x, c2.y
    add r1.xyz, -r1, c27
    cmp r2.yzw, c27.xxyz, r2.x, r2
    add r1.xyz, r1, r2.yzww
    add r3, r1.x, -c2
    cmp r1.xw, -r3_abs.x, v0.xyzy, c2.x
    cmp r1.xw, -r3_abs.y, v0.zyzw, r1
    cmp r1.xw, -r3_abs.z, v1.xyzy, r1
    cmp r1.xw, -r3_abs.w, v1.zyzw, r1
    texld_pp r3, r1.xwzw, s4
    add r4, r1.y, -c2
    add r1, r1.z, -c2
    cmp r2.yz, -r4_abs.x, v0.xxyw, c2.x
    cmp r2.yz, -r4_abs.y, v0.xzww, r2
    cmp r2.yz, -r4_abs.z, v1.xxyw, r2
    cmp r2.yz, -r4_abs.w, v1.xzww, r2
    texld_pp r4, r2.yzzw, s5
    cmp r2.yz, -r1_abs.x, v0.xxyw, c2.x
    cmp r1.xy, -r1_abs.y, v0.zwzw, r2.yzzw
    cmp r1.xy, -r1_abs.z, v1, r1
    cmp r1.xy, -r1_abs.w, v1.zwzw, r1
    texld_pp r1, r1, s6
    lrp_pp r5.yzw, r1.x, r4.xxyw, r3.xxyw
    mul_pp r5.x, r5.w, r5.y
    mad_pp r1.yz, r5.xxzw, c0.x, c0.y
    nrm_pp r3.xyz, v8
    mul_pp r2.yzw, r1.z, r3.xxyz
    nrm_pp r3.xyz, v7
    mad_pp r2.yzw, r1.y, r3.xxyz, r2
    dp2add_pp r1.y, r1.yzzw, -r1.yzzw, c2.y
    rsq_pp r1.y, r1.y
    rcp_pp r1.y, r1.y
    nrm_pp r3.xyz, v3
    mad_pp r1.yzw, r1.y, r3.xxyz, r2
    dp3_pp r2.y, r1.yzww, -c10
    dp3_pp r0.y, r1.yzww, -r0.yzww
    mul r1.yzw, r2.y, c36.xxyz
    max r0.z, v4.z, c2.x
    add r0.w, r0.z, -v4.w
    cmp r3.z, r0.w, c2.x, r0.z
    mov r3.xyw, v4
    texldp_pp r3, r3, s13
    max r0.z, v5.z, c2.x
    add r0.w, r0.z, -v5.w
    cmp r4.z, r0.w, c2.x, r0.z
    mov r4.xyw, v5
    texldp_pp r4, r4, s7
    min_pp r0.z, r4.x, r3.x
    lrp_pp r0.w, v6.z, c2.y, r4.x
    lrp_pp r2.z, v6.z, c2.y, r0.z
    rcp r0.z, v4.w
    mul r3.xy, r0.z, v4
    mad r3.xy, r3, c0.x, c0.y
    abs_sat r3.xy, r3
    add_sat r3.xy, r3, -c65.x
    mul r3.xy, r3, c65.y
    max r0.z, r3.x, r3.y
    lrp_pp r3.x, r0.z, c2.y, r2.z
    lrp_pp r2.z, r0.z, c2.y, r0.w
    texld_pp r4, v0.zwzw, s10
    mul_pp r0.z, r3.x, r4.w
    mul_pp r1.yzw, r0.z, r1
    cmp_pp r1.yzw, r2.y, r1, c2.x
    mul_pp r3.xyz, c58.w, c58
    mul_pp r3.xyz, r0.y, r3
    cmp_pp r0.yzw, r0.y, r3.xxyz, c2.x
    mad_pp r0.xyz, r0.x, r0.yzww, r1.yzww
    mul_pp r1.yzw, r4.xxyz, r4.xxyz
    dp3_pp r0.w, r1.yzww, c1
    mad_pp r1.yzw, r4.xxyz, r4.xxyz, -r0.w
    mad_sat_pp r1.yzw, r1, c71.w, r0.w
    mul_pp r1.yzw, r1, c70.xxyz
    mul_pp r3.xyz, r1.yzww, c17
    mul r3.xyz, r3, c70.w
    mad r1.yzw, r1, c17.xxyz, -r3.xxyz
    mad_pp r1.yzw, r2.z, r1, r3.xxyz
    add_pp r0.xyz, r0, r1.yzww
    mul_pp r0.xyz, r0, c16
    frc r1.yz, c26.xxyw
    cmp r2.yz, -r1, c2.x, c2.y
    add r1.yz, -r1, c26.xxyw
    cmp r2.xy, c26, r2.x, r2.yzzw
    add r1.yz, r1, r2.xxyw
    add r2, r1.y, -c2
    add r3, r1.z, -c2
    cmp r1.yz, -r2_abs.x, v0.xxyw, c2.x
    cmp r1.yz, -r2_abs.y, v0.xzww, r1
    cmp r1.yz, -r2_abs.z, v1.xxyw, r1
    cmp r1.yz, -r2_abs.w, v1.xzww, r1
    texld_pp r2, r1.yzzw, s0
    cmp r1.yz, -r3_abs.x, v0.xxyw, c2.x
    cmp r1.yz, -r3_abs.y, v0.xzww, r1
    cmp r1.yz, -r3_abs.z, v1.xxyw, r1
    cmp r1.yz, -r3_abs.w, v1.xzww, r1
    texld_pp r3, r1.yzzw, s1
    lrp_pp r4, r1.x, r3, r2
    mul_pp r0.xyz, r0, r4
    mul_pp r0.w, r4.w, c16.w
    mul_pp r0, r0, v9
    mul_pp r0, r0, c89
    min_pp r1, r0, c1.w
    mul_pp r0.xyz, c75, v6.y
    mad_pp oC0.xyz, r1, v6.x, r0
    mov_pp oC0.w, r1.w

// approximately 138 instruction slots used (8 texture, 130 arithmetic)
