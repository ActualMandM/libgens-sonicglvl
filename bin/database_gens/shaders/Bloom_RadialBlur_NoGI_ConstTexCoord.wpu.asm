//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_BloomRadialBlurParam;
//   float4 g_BloomRadialBlurRotateParam;
//   sampler2D samp_bright_pass;
//   sampler2D samp_mask;
//
//
// Registers:
//
//   Name                         Reg   Size
//   ---------------------------- ----- ----
//   g_BloomRadialBlurParam       c150     1
//   g_BloomRadialBlurRotateParam c151     1
//   samp_bright_pass             s0       1
//   samp_mask                    s1       1
//

    ps_3_0
    def c0, 3, 4, 5, 6
    def c1, 7, 8, 9, 10
    def c2, 11, 12, 13, 14
    def c3, 15, 0.0625, 0, 0
    def c4, 1, -1, 2, 0
    dcl_texcoord v0.xy
    dcl_2d s0
    dcl_2d s1
    mov r0.zw, c150
    mad r1, r0.w, c0, r0.z
    lrp r2, r1.xxyy, v0.xyxy, c150.xyxy
    texld r3, r2.zwzw, s0
    texld r2, r2, s0
    mad r0.x, r0.w, c4.z, r0.z
    lrp r4.xy, r0.x, v0, c150
    texld r4, r4, s0
    lrp r5.xy, c150.z, v0, c150
    texld r5, r5, s0
    add r0.y, c150.w, c150.z
    lrp r6.xy, r0.y, v0, c150
    texld r6, r6, s0
    mov r7.z, c4.x
    add r8.xy, -c150, v0
    mul r7.xy, r0.y, r8
    mov r9.xy, c4
    mul r9.xy, r9, c151.yxzw
    mov r9.z, c150.x
    dp3 r10.x, r7, r9
    mov r11.xy, c151
    mov r11.z, c150.y
    dp3 r10.y, r7, r11
    texld_pp r7, r10, s1
    mul r6, r6, r7
    mov r7.z, c4.x
    mul r7.xy, r8, c150.z
    dp3 r10.x, r7, r9
    dp3 r10.y, r7, r11
    texld_pp r7, r10, s1
    mad_pp r5, r5, r7, r6
    mov r6.z, c4.x
    mul r6.xy, r0.x, r8
    dp3 r0.x, r6, r9
    dp3 r0.y, r6, r11
    texld_pp r6, r0, s1
    mad_pp r4, r4, r6, r5
    mul r5, r1.xxyy, r8.xyxy
    mad r6.xyz, r5.xyxw, c4.xxww, c4.wwxw
    mad r5.xyz, r5.zwxw, c4.xxww, c4.wwxw
    dp3 r0.x, r6, r9
    dp3 r0.y, r6, r11
    texld_pp r6, r0, s1
    mad_pp r2, r2, r6, r4
    dp3 r0.x, r5, r9
    dp3 r0.y, r5, r11
    texld_pp r4, r0, s1
    mad_pp r2, r3, r4, r2
    lrp r3, r1.zzww, v0.xyxy, c150.xyxy
    mul r1, r1.zzww, r8.xyxy
    texld r4, r3, s0
    texld r3, r3.zwzw, s0
    mad r5.xyz, r1.xyxw, c4.xxww, c4.wwxw
    mad r1.xyz, r1.zwxw, c4.xxww, c4.wwxw
    dp3 r0.x, r5, r9
    dp3 r0.y, r5, r11
    texld_pp r5, r0, s1
    mad_pp r2, r4, r5, r2
    dp3 r0.x, r1, r9
    dp3 r0.y, r1, r11
    texld_pp r1, r0, s1
    mad_pp r1, r3, r1, r2
    mad r2, r0.w, c1, r0.z
    lrp r3, r2.xxyy, v0.xyxy, c150.xyxy
    texld r4, r3, s0
    texld r3, r3.zwzw, s0
    mul r5, r2.xxyy, r8.xyxy
    mad r6.xyz, r5.xyxw, c4.xxww, c4.wwxw
    mad r5.xyz, r5.zwxw, c4.xxww, c4.wwxw
    dp3 r0.x, r6, r9
    dp3 r0.y, r6, r11
    texld_pp r6, r0, s1
    mad_pp r1, r4, r6, r1
    dp3 r0.x, r5, r9
    dp3 r0.y, r5, r11
    texld_pp r4, r0, s1
    mad_pp r1, r3, r4, r1
    lrp r3, r2.zzww, v0.xyxy, c150.xyxy
    mul r2, r2.zzww, r8.xyxy
    texld r4, r3, s0
    texld r3, r3.zwzw, s0
    mad r5.xyz, r2.xyxw, c4.xxww, c4.wwxw
    mad r2.xyz, r2.zwxw, c4.xxww, c4.wwxw
    dp3 r0.x, r5, r9
    dp3 r0.y, r5, r11
    texld_pp r5, r0, s1
    mad_pp r1, r4, r5, r1
    dp3 r0.x, r2, r9
    dp3 r0.y, r2, r11
    texld_pp r2, r0, s1
    mad_pp r1, r3, r2, r1
    mad r2, r0.w, c2, r0.z
    lrp r3, r2.xxyy, v0.xyxy, c150.xyxy
    texld r4, r3, s0
    texld r3, r3.zwzw, s0
    mul r5, r2.xxyy, r8.xyxy
    mad r6.xyz, r5.xyxw, c4.xxww, c4.wwxw
    mad r5.xyz, r5.zwxw, c4.xxww, c4.wwxw
    dp3 r0.x, r6, r9
    dp3 r0.y, r6, r11
    texld_pp r6, r0, s1
    mad_pp r1, r4, r6, r1
    dp3 r0.x, r5, r9
    dp3 r0.y, r5, r11
    texld_pp r4, r0, s1
    mad_pp r1, r3, r4, r1
    lrp r3, r2.zzww, v0.xyxy, c150.xyxy
    mul r2, r2.zzww, r8.xyxy
    texld r4, r3, s0
    texld r3, r3.zwzw, s0
    mad r5.xyz, r2.xyxw, c4.xxww, c4.wwxw
    mad r2.xyz, r2.zwxw, c4.xxww, c4.wwxw
    dp3 r0.x, r5, r9
    dp3 r0.y, r5, r11
    texld_pp r5, r0, s1
    mad_pp r1, r4, r5, r1
    dp3 r0.x, r2, r9
    dp3 r0.y, r2, r11
    texld_pp r2, r0, s1
    mad_pp r1, r3, r2, r1
    mad r0.x, r0.w, c3.x, r0.z
    lrp r2.xy, r0.x, v0, c150
    mul r0.xy, r0.x, r8
    texld r2, r2, s0
    mov r0.z, c4.x
    dp3 r3.x, r0, r9
    dp3 r3.y, r0, r11
    texld_pp r0, r3, s1
    mad_pp r0, r2, r0, r1
    mul_pp oC0, r0, c3.y

// approximately 130 instruction slots used (32 texture, 98 arithmetic)
