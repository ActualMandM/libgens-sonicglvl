//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   sampler2D g_DepthSampler;
//   float4 g_ForceAlphaColor;
//   sampler2D g_FramebufferSampler;
//   float4 g_LightScatteringColor;
//   row_major float4x4 g_MtxView;
//   float4 g_ViewportSize;
//   float4 mrgDistortionParam;
//   float4 mrgTexcoordIndex[4];
//   sampler2D sampDif;
//   sampler2D sampNrm;
//
//
// Registers:
//
//   Name                   Reg   Size
//   ---------------------- ----- ----
//   g_ViewportSize         c24      1
//   mrgTexcoordIndex       c26      1
//   g_LightScatteringColor c75      1
//   g_ForceAlphaColor      c89      1
//   g_MtxView              c90      3
//   mrgDistortionParam     c150     1
//   sampDif                s0       1
//   sampNrm                s1       1
//   g_FramebufferSampler   s11      1
//   g_DepthSampler         s12      1
//

    ps_3_0
    def c0, 2, -1, 1, 4
    def c1, 0.5, -0.5, 0, 0
    def c2, 0, 1, 2, 3
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_texcoord4_pp v4.xy
    dcl_texcoord8 v5.xyz
    dcl_color_pp v6
    dcl_texcoord6_pp v7.xy
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s11
    dcl_2d s12
    frc r0.xy, c26.xzzw
    cmp r0.zw, -r0.xyxy, c2.x, c2.y
    add r0.xy, -r0, c26.xzzw
    mov r1.x, c2.x
    cmp r0.zw, c26.xyxz, r1.x, r0
    add r0.xy, r0.zwzw, r0
    add r1, r0.y, -c2
    add r0, r0.x, -c2
    cmp r2.xy, -r1_abs.x, v0, c2.x
    cmp r1.xy, -r1_abs.y, v0.zwzw, r2
    cmp r1.xy, -r1_abs.z, v1, r1
    cmp r1.xy, -r1_abs.w, v1.zwzw, r1
    texld_pp r1, r1, s1
    mul_pp r1.x, r1.w, r1.x
    mad_pp r1.xy, r1, c0.x, c0.y
    nrm_pp r2.xyz, v5
    mul_pp r2.xyz, r1.y, r2
    nrm_pp r3.xyz, v3
    mad_pp r2.xyz, r1.x, r3, r2
    dp2add_pp r1.x, r1, -r1, c2.y
    rsq_pp r1.x, r1.x
    rcp_pp r1.x, r1.x
    nrm_pp r3.xyz, v2
    mad_pp r1.xyz, r1.x, r3, r2
    mul_pp r1.yw, r1.y, c91.xxzy
    mad_pp r1.xy, r1.x, c90, r1.ywzw
    mad_pp r1.xy, r1.z, c92, r1
    mul_pp r1.xy, r1, c150.w
    mul r1.z, c24.w, vPos.y
    mad_pp r2.y, r1.z, -c2.z, r1.y
    dp2add_pp r2.x, vPos.x, c24.z, r1.x
    add r1.xy, r2, c0.yzzw
    mad r1.xy, r1, c1, c1.x
    texld_pp r2, r1, s11
    texld r1, r1, s12
    add_pp r1.yzw, -r2.xxyz, c2.y
    add_pp r1.yzw, r1, r1
    cmp r3.xy, -r0_abs.x, v0, c2.x
    cmp r0.xy, -r0_abs.y, v0.zwzw, r3
    cmp r0.xy, -r0_abs.z, v1, r0
    cmp r0.xy, -r0_abs.w, v1.zwzw, r0
    texld_pp r0, r0, s0
    add_pp r3.xyz, -r0, c2.y
    mad_pp r1.yzw, r1, -r3.xxyz, c2.y
    add r3.xyz, r2, -c150.z
    mul_pp r0.xyz, r0, r2
    mul_pp r2.w, r0.w, v6.w
    add_pp r0.xyz, r0, r0
    cmp_pp r0.xyz, r3, c2.x, r0
    cmp_pp r1.yzw, r3.xxyz, r1, c2.x
    add_pp r0.xyz, r0, r1.yzww
    rcp r0.w, v7.y
    mad r1.x, v7.x, -r0.w, r1.x
    mad_pp r0.w, v7.x, -r0.w, c2.y
    rcp r0.w, r0.w
    mul r0.w, r0.w, c150.y
    max r3.x, r1.x, c2.x
    mul_pp r0.w, r0.w, r3.x
    lrp_pp r2.xyz, r0.w, v6, r0
    mul_pp r0, r2, c89
    min_pp r1, r0, c0.w
    mul_pp r0.xyz, c75, v4.y
    mad_pp oC0.xyz, r1, v4.x, r0
    mov_pp oC0.w, r1.w

// approximately 72 instruction slots used (4 texture, 68 arithmetic)
