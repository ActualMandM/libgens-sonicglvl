//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_EyePosition;
//   float4 g_LightScatteringFarNearScale;
//   float4 g_LightScattering_ConstG_FogDensity;
//   float4 g_LightScattering_Ray_Mie_Ray2_Mie2;
//   row_major float3x4 g_MtxPalette[25];
//   row_major float4x4 g_MtxProjection;
//   row_major float4x4 g_MtxView;
//   float4 g_VerticalLightDirection;
//   float4 mrgGIAtlasParam;
//   float4 mrgGlobalLight_Direction;
//   bool mrgHasBone;
//   float4 mrgTexcoordOffset[2];
//
//
// Registers:
//
//   Name                                Reg   Size
//   ----------------------------------- ----- ----
//   mrgHasBone                          b0       1
//   g_MtxProjection                     c0       4
//   g_MtxView                           c4       4
//   g_MtxPalette                        c28     75
//   g_EyePosition                       c178     1
//   mrgGlobalLight_Direction            c183     1
//   mrgGIAtlasParam                     c186     1
//   mrgTexcoordOffset                   c191     1
//   g_LightScattering_Ray_Mie_Ray2_Mie2 c197     1
//   g_LightScattering_ConstG_FogDensity c198     1
//   g_LightScatteringFarNearScale       c199     1
//   g_VerticalLightDirection            c211     1
//

    vs_3_0
    def c8, 1, 3, 128, 1.44269502
    def c9, 1.5, 0.600000024, 0.400000006, 0
    dcl_position v0
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_color v3
    dcl_normal v4
    dcl_tangent v5
    dcl_binormal v6
    dcl_blendweight v7
    dcl_blendindices v8
    dcl_texcoord4 v9
    dcl_texcoord5 v10
    dcl_texcoord6 v11
    dcl_color1 v12
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord5 o5
    dcl_texcoord7 o6
    dcl_texcoord8 o7
    dcl_color o8
    if b0
      add r0.x, c8.x, -v7.x
      add r0.x, r0.x, -v7.y
      add r0.x, r0.x, -v7.z
      mul r1, c8.y, v8
      mova a0, r1.yxzw
      mul r2, v7.y, c30[a0.x]
      mad r2, c30[a0.y], v7.x, r2
      mad r2, c30[a0.z], v7.z, r2
      mad r1, c30[a0.w], r0.x, r2
      dp4 r2.z, r1, v0
      dp3 r3.z, r1, v4
      mul r4, v7.y, c28[a0.x]
      mad r4, c28[a0.y], v7.x, r4
      mad r4, c28[a0.z], v7.z, r4
      mad r4, c28[a0.w], r0.x, r4
      dp4 r2.x, r4, v0
      dp3 r3.x, r4, v4
      dp3 r5.x, r4, v5
      mul r6, v7.y, c29[a0.x]
      mad r6, c29[a0.y], v7.x, r6
      mad r6, c29[a0.z], v7.z, r6
      mad r0, c29[a0.w], r0.x, r6
      dp4 r2.y, r0, v0
      dp3 r3.y, r0, v4
      dp3 r5.y, r0, v5
      dp3 r5.z, r1, v5
      dp3 r4.x, r4, -v6
      dp3 r4.y, r0, -v6
      dp3 r4.z, r1, -v6
      mov r2.w, v0.w
    else
      mov r2, v0
      mov r5.xyz, v5
      mov r4.xyz, -v6
      mov r3.xyz, v4
    endif
    mov r0.z, v11.x
    mov r0.xy, v10
    dp3 r0.w, r0, r0
    add r0.w, -r0.w, c8.x
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    add r1.xyz, r0, r0
    mul r0.xyz, r0, r1
    mul r6.xyz, r0.w, r1.zxyw
    mad r7.xyz, v10.xxyw, r1.zyzw, -r6.zxyw
    add r0.xyz, r0.zzyw, r0.yxxw
    add r0.xyz, -r0, c8.x
    mul r0.w, c8.z, v11.y
    mul r0.xyz, r0, r0.w
    mul r7.xyz, r7, r0.w
    mov r8.x, r7.x
    mov r8.z, r0.z
    mad r1.xyz, v10.xyxw, r1.yzzw, r6
    mul r1.xyz, r0.w, r1
    mov r8.y, r1.y
    dp3 r6.z, r3, r8
    dp3 r9.z, r5, r8
    mov r8.w, v9.z
    dp4 r10.z, r2, r8
    dp3 r8.z, r4, r8
    mov r11.x, r0.x
    mov r11.y, r7.y
    mov r11.z, r1.z
    dp3 r6.x, r3, r11
    mov r7.x, r1.x
    mov r7.y, r0.y
    dp3 r6.y, r3, r7
    nrm r0.xyz, r6
    mov o4.xyz, r0
    dp3 r9.x, r5, r11
    dp3 r9.y, r5, r7
    dp3 r1.x, r9, r9
    rsq r1.x, r1.x
    mul o6.xyz, r1.x, r9
    mov r11.w, v9.x
    dp4 r10.x, r2, r11
    mov r7.w, v9.y
    dp4 r10.y, r2, r7
    mul r1, r10.y, c5
    mad r1, r10.x, c4, r1
    mad r1, r10.z, c6, r1
    mad r1, r2.w, c7, r1
    mov r10.w, -r1.z
    mov o3, r10
    dp3 r8.x, r4, r11
    dp3 r8.y, r4, r7
    dp3 r2.x, r8, r8
    rsq r2.x, r2.x
    mul o7.xyz, r2.x, r8
    mad r2.zw, v2.xyxy, c186.xyxy, c186
    mov r2.xy, v1
    add o1, r2, c191
    mul r2, r1.y, c1
    mad r2, r1.x, c0, r2
    mad r2, r1.z, c2, r2
    mad o0, r1.w, c3, r2
    add r1.x, r10.w, -c199.y
    mul_sat r1.x, r1.x, c199.x
    mul r1.x, r1.x, c199.z
    add r1.y, c197.y, c197.x
    mul r1.x, r1.x, -r1.y
    mul r1.x, r1.x, c8.w
    exp r1.x, r1.x
    add r2.xyz, -r10, c178
    nrm r3.xyz, r2
    dp3_sat r1.z, r0, r3
    add r1.w, -r1.z, c8.x
    mov o5.xw, r1
    rcp r1.y, r1.y
    dp3 r1.z, -c183, r3
    mad r2.x, c198.z, r1.z, c198.y
    pow r3.x, r2_abs.x, c9.x
    rcp r2.x, r3.x
    mul r2.x, r2.x, c198.x
    mul r2.x, r2.x, c197.w
    mad r1.z, r1.z, r1.z, c8.x
    mad r1.z, c197.z, r1.z, r2.x
    mul r1.y, r1.y, r1.z
    add r1.x, -r1.x, c8.x
    mul r1.x, r1.x, r1.y
    mul o5.y, r1.x, c199.w
    mov r0.w, c8.x
    dp4_sat r0.x, r0, c211
    add o5.z, -r0.x, c8.x
    mul r0.x, r1.w, r1.w
    mul r0.x, r0.x, r0.x
    mul r0.x, r1.w, r0.x
    mad o4.w, r0.x, c9.y, c9.z
    mov o2, v12
    mov o6.w, c9.w
    mov o7.w, c9.w
    mov o8, v3

// approximately 142 instruction slots used
