//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 cY;
//   sampler2D s0;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cY           c150     1
//   s0           s0       1
//

    ps_3_0
    def c0, 0.298999995, 0.587000012, 0.114, -0.5
    def c1, -0.168740004, -0.331259996, 0.5, -1
    def c2, 0.5, -0.418689996, -0.0813099965, 0.00196078443
    def c3, 0, 120, 240, 0.0166666675
    def c4, 1, 1.40199995, 0, 1.77199996
    def c5, 360, -360, 0, 0
    def c6, -1, -2, -3, -4
    def c7, 1, -0.344139993, -0.714139998, 60
    dcl_texcoord v0.xy
    dcl_2d s0
    texld_pp r0, v0, s0
    mov_sat_pp r0.xyz, r0
    mov_pp oC0.w, r0.w
    dp3_pp r0.w, c0, r0
    add_pp r0.w, r0.w, c0.w
    mad_pp r0.w, r0.w, c150.y, c150.x
    add_pp r0.w, r0.w, -c0.w
    max_pp r1.x, c1.w, r0.w
    min_pp r2.x, r1.x, -c1.w
    dp3_pp r2.y, c1, r0
    dp3_pp r2.z, c2, r0
    dp3 r0.x, c7, r2
    dp2add r0.y, c4.xwzw, r2, c4.z
    dp2add r0.z, c4, r2.xzzw, c4.z
    add r1.xyz, -r0, r0.zxyw
    cmp_pp r1, r1.xxyz, r0.zxxy, r0.xzyz
    min_pp r2.x, r0.y, r1.y
    max_pp r2.y, r1.x, r0.y
    add_pp r3.xyz, -r0.yzxw, r0
    add r0.xy, r0.zxzw, -r1.zwzw
    add_pp r0.z, -r2.x, r2.y
    add_pp r0.w, r0.z, c2.w
    rcp r0.w, r0.w
    mul_pp r0.w, r0.w, c7.w
    mad_pp r1.xyz, r3, r0.w, c3
    cmp_pp r0.y, r0.y, r1.y, r1.z
    cmp_pp r0.x, r0.x, r1.x, r0.y
    add_pp r0.x, r0.x, c150.z
    add r0.yw, r0.x, c5.xxzy
    cmp_pp r0.w, r0.w, r0.w, r0.x
    cmp_pp r0.x, r0.x, r0.w, r0.y
    mul_pp r0.y, r0.x, c3.w
    frc_pp r0.w, r0.y
    add_pp r0.y, -r0.w, r0.y
    mad_pp r0.x, r0.x, c3.w, -r0.y
    add_pp r0.w, r2.y, c2.w
    rcp r0.w, r0.w
    mul_pp r0.z, r0.w, r0.z
    mul_pp r0.w, c150.w, c150.w
    mul_pp r0.z, r0.z, r0.w
    min_pp r1.y, r0.z, -c1.w
    mul_pp r1.z, r0.x, r1.y
    mad_pp r1.w, r1.y, -r0.x, r1.y
    mov_pp r1.x, c4.z
    add_pp r1, -r1, -c1.w
    mul_pp r1, r2.y, r1
    cmp_pp r2.yz, -r0_abs.y, r1.xwyw, r1
    add r0, r0.y, c6
    mov_pp r2.x, r1.x
    cmp_pp r2.xyz, -r0_abs.x, r1.zxyw, r2
    cmp_pp r2.xyz, -r0_abs.y, r1.yxww, r2
    cmp_pp r0.xyz, -r0_abs.z, r1.yzxw, r2
    cmp_pp oC0.xyz, -r0_abs.w, r1.wyxw, r0

// approximately 55 instruction slots used (1 texture, 54 arithmetic)
