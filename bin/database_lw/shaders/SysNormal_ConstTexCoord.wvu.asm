//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   row_major float4x4 g_MtxLightViewProjection;
//   row_major float3x4 g_MtxPalette[25];
//   row_major float4x4 g_MtxProjection;
//   row_major float4x4 g_MtxView;
//   row_major float4x4 g_MtxWorld;
//   bool mrgHasBone;
//   float4 mrgTexcoordOffset[2];
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   mrgHasBone               b15      1
//   g_MtxLightViewProjection c24      4
//   g_MtxPalette             c28     75
//   mrgTexcoordOffset        c191     2
//   g_MtxProjection          c224     4
//   g_MtxView                c228     4
//   g_MtxWorld               c232     4
//

    vs_3_0
    def c0, 3, 1, 0.5, -0.5
    def c1, 0, 0, 0, 0
    dcl_position v0
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2 v3
    dcl_texcoord3 v4
    dcl_normal v5
    dcl_tangent v6
    dcl_binormal v7
    dcl_blendweight v8
    dcl_blendindices v9
    dcl_color v10
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8
    dcl_color o9
    if b15
      add r0.x, v8.y, v8.x
      add r0.x, r0.x, v8.z
      add r0.x, -r0.x, c0.y
      mul r1, c0.x, v9
      mova a0, r1.yxzw
      mul r2, v8.y, c30[a0.x]
      mad r2, c30[a0.y], v8.x, r2
      mad r2, c30[a0.z], v8.z, r2
      mad r1, c30[a0.w], r0.x, r2
      dp4 r0.y, r1, v0
      mul r1, v8.y, c28[a0.x]
      mad r1, c28[a0.y], v8.x, r1
      mad r1, c28[a0.z], v8.z, r1
      mad r1, c28[a0.w], r0.x, r1
      dp4 r0.z, r1, v0
      mul r1, v8.y, c29[a0.x]
      mad r1, c29[a0.y], v8.x, r1
      mad r1, c29[a0.z], v8.z, r1
      mad r1, c29[a0.w], r0.x, r1
      dp4 r0.x, r1, v0
      mov r0.w, v0.w
    else
      mov r0, v0.yzxw
    endif
    mov r1, c229
    mul r2, r1.y, c225
    mad r2, r1.x, c224, r2
    mad r2, r1.z, c226, r2
    mad r1, r1.w, c227, r2
    mul r2, r1, c235.y
    mov r3, c228
    mul r4, r3.y, c225
    mad r4, r3.x, c224, r4
    mad r4, r3.z, c226, r4
    mad r3, r3.w, c227, r4
    mad r2, c235.x, r3, r2
    mov r4, c230
    mul r5, r4.y, c225
    mad r5, r4.x, c224, r5
    mad r5, r4.z, c226, r5
    mad r4, r4.w, c227, r5
    mad r2, c235.z, r4, r2
    mov r5, c231
    mul r6, r5.y, c225
    mad r6, r5.x, c224, r6
    mad r6, r5.z, c226, r6
    mad r5, r5.w, c227, r6
    mad r2, c235.w, r5, r2
    mul r6, r1, c233.y
    mad r6, c233.x, r3, r6
    mad r6, c233.z, r4, r6
    mad r6, c233.w, r5, r6
    mul r6, r0.x, r6
    mul r7, r1, c232.y
    mad r7, c232.x, r3, r7
    mad r7, c232.z, r4, r7
    mad r7, c232.w, r5, r7
    mad r6, r0.z, r7, r6
    mul r1, r1, c234.y
    mad r1, c234.x, r3, r1
    mad r1, c234.z, r4, r1
    mad r1, c234.w, r5, r1
    mad r1, r0.y, r1, r6
    mad r0, r0.w, r2, r1
    mov o3, r0
    mul r1.xyz, c233, v5.y
    mad r1.xyz, v5.x, c232, r1
    mad o4.xyz, v5.z, c234, r1
    mul r1.xyz, c233, v6.y
    mad r1.xyz, v6.x, c232, r1
    mad o7.xyz, v6.z, c234, r1
    mul r1.xyz, c233, v7.y
    mad r1.xyz, v7.x, c232, r1
    mad o8.xyz, v7.z, c234, r1
    add o1.xy, c191, v1
    add o1.zw, c191, v2.xyxy
    add o2.xy, c192, v3
    add o2.zw, c192, v4.xyxy
    mov o0, r0
    mov o4.w, c1.x
    mul r1, r0.y, c25
    mad r1, r0.x, c24, r1
    mad r0, r0.z, c26, r1
    add r0, r0, c27
    mul r1.xyz, r0.xyww, c0.zwzw
    add o5.xy, r1.z, r1
    mov o5.zw, r0
    mov o6, v0.z
    mov o7.w, c1.x
    mov o8.w, c1.x
    mov o9, v10

// approximately 94 instruction slots used
