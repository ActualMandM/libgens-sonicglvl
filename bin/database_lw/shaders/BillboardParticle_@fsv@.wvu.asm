//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   row_major float4x4 g_MtxProjection;
//   row_major float4x4 g_MtxView;
//   row_major float4x4 g_MtxWorld;
//   row_major float4x4 g_MtxWorldIT;
//   float4 g_aLightField[6];
//   float4 mrgGlobalLight_Direction;
//   bool mrgHasBone;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   mrgHasBone               b15      1
//   mrgGlobalLight_Direction c183     1
//   g_aLightField            c213     6
//   g_MtxProjection          c224     4
//   g_MtxView                c228     4
//   g_MtxWorld               c232     4
//   g_MtxWorldIT             c236     3
//

    vs_3_0
    def c0, -1, 0, 3, -0.100000001
    def c1, 0.5, 0, 0, 0
    dcl_position v0
    dcl_texcoord v1
    dcl_color v2
    dcl_texcoord1 v3
    dcl_texcoord2 v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_color o3
    dcl_color1 o4
    dcl_texcoord2 o5
    mov o1, v1
    dp3 r0.x, v3, v3
    rsq r0.x, r0.x
    mad r0.xyz, v3, r0.x, c0_abs.yyxw
    nrm r1.xyz, r0
    mul r0.xyz, r1.y, c237
    mad r0.xyz, r1.x, c236, r0
    mad r0.xyz, r1.z, c238, r0
    dp3 r0.w, -c183, -c183
    rsq r0.w, r0.w
    mul r1.xz, r0.w, -c183.yyzw
    mov r1.y, c0.y
    add r0.xyz, r0, r1
    nrm r1.xyz, r0
    mul r0.xyz, r1, r1
    mad r1.xyz, r1, c1.x, c1.x
    mov r2.xyz, c216
    mad r2.xyz, r2, r1.y, c215
    mul r2.xyz, r0.y, r2
    mov r3.xyz, c213
    mad r1.xyw, c214.xyzz, r1.x, r3.xyzz
    mad r0.xyw, r0.x, r1, r2.xyzz
    mov r2.xyz, c218
    mad r1.xyz, r2, r1.z, c217
    mad o4.xyz, r0.z, r1, r0.xyww
    mul r0, c233, v0.y
    mad r0, v0.x, c232, r0
    mad r0, v0.z, c234, r0
    add r0, r0, c235
    if b15
      nrm r1.xyz, v3
      mul r2.xyz, r1.y, c229
      mad r1.xyw, r1.x, c228.xyzz, r2.xyzz
      mad r1.xyz, r1.z, c230, r1.xyww
      mul r2.xyz, r1, v0.w
      mul r3.xyz, r1.yzxw, c0.xyyw
      mad r1.xyz, r1.zxyw, c0.yxyw, -r3
      dp3 r1.w, r1, r1
      rsq r1.w, r1.w
      mul r1.xyz, r1.w, r1
      mad r2.xyz, r1, v3.w, r2
      rcp r1.x, r1.w
      mad_sat r1.x, r1.x, c0.z, c0.w
      mul r1.x, r1.x, v2.w
      mul r3, r0.y, c229
      mad r3, r0.x, c228, r3
      mad r3, r0.z, c230, r3
      mad r3, r0.w, c231, r3
      mov r2.w, c0.y
      add r2, r2, r3
      mov r3.x, c0.y
    else
      mul r4, c237, v3.y
      mad r4, v3.x, c236, r4
      mad r4, v3.z, c238, r4
      add r0, r0, r4
      mul r4, r0.y, c229
      mad r4, r0.x, c228, r4
      mad r4, r0.z, c230, r4
      mad r2, r0.w, c231, r4
      mov r1.x, v2.w
      mov r3.x, v0.w
    endif
    mov r3.y, c0.y
    add r0, r2, r3.yyxy
    mul r3.xy, r0.y, c225.zwzw
    mad r0.xy, r0.x, c224.zwzw, r3
    mad r0.xy, r0.z, c226.zwzw, r0
    mad r0.xy, r0.w, c227.zwzw, r0
    rcp r0.y, r0.y
    mul r0.x, r0.y, r0.x
    mul r0.yzw, r2.y, c225.xxyw
    mad r0.yzw, r2.x, c224.xxyw, r0
    mad r0.yzw, r2.z, c226.xxyw, r0
    mad r0.yzw, r2.w, c227.xxyw, r0
    mov o2.xyz, r0.yzww
    mul o0.z, r0.w, r0.x
    mov o2.w, r2.z
    mov r1.yzw, v2.xxyz
    mov o3, r1.yzwx
    mov o0.xyw, r0.yzzw
    mov o4.w, c213.w
    mov o5, v4

// approximately 91 instruction slots used
