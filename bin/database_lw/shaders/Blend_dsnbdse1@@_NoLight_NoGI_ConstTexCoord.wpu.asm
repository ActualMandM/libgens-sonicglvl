//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_Ambient;
//   float4 g_Diffuse;
//   float4 g_EyePosition;
//   row_major float4x4 g_MtxView;
//   float4 g_PowerGlossLevel;
//   float4 g_Specular;
//   float4 g_aLightField[6];
//   float4 mrgGlobalLight_Diffuse;
//   float4 mrgGlobalLight_Direction;
//   float4 mrgGlobalLight_Specular;
//   float4 mrgInShadowScale;
//   float4 mrgLuminanceRange;
//   float4 mrgTexcoordIndex[4];
//   sampler2D sampBlend;
//   sampler2D sampDLScatter;
//   sampler2D sampDif0;
//   sampler2D sampDif1;
//   sampler2D sampEnv;
//   sampler2D sampNrm;
//   sampler2D sampSpc0;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   mrgGlobalLight_Direction c10      1
//   g_Diffuse                c16      1
//   g_Ambient                c17      1
//   g_Specular               c18      1
//   g_PowerGlossLevel        c20      1
//   g_EyePosition            c22      1
//   mrgTexcoordIndex         c26      2
//   mrgGlobalLight_Diffuse   c36      1
//   mrgGlobalLight_Specular  c37      1
//   mrgLuminanceRange        c63      1
//   mrgInShadowScale         c64      1
//   g_aLightField            c77      6
//   g_MtxView                c90      3
//   sampDif0                 s0       1
//   sampDif1                 s1       1
//   sampSpc0                 s2       1
//   sampNrm                  s4       1
//   sampBlend                s5       1
//   sampEnv                  s6       1
//   sampDLScatter            s9       1
//

    ps_3_0
    def c0, 2, -1, 0.5, 10
    def c1, 4, 0.5, -0.5, 0
    def c2, 0, 1, 2, 3
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xyz
    dcl_texcoord3_pp v3
    dcl_texcoord5 v4.xy
    dcl_texcoord7 v5.xyz
    dcl_texcoord8 v6.xyz
    dcl_color_pp v7
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s4
    dcl_2d s5
    dcl_2d s6
    dcl_2d s9
    frc r0.xy, c27
    cmp r0.zw, -r0.xyxy, c2.x, c2.y
    add r0.xy, -r0, c27
    mov r1.x, c2.x
    cmp r0.zw, c27.xyxy, r1.x, r0
    add r0.xy, r0.zwzw, r0
    add r2, r0.x, -c2
    add r0, r0.y, -c2
    cmp r1.yz, -r2_abs.x, v0.xxyw, c2.x
    cmp r1.yz, -r2_abs.y, v0.xzww, r1
    cmp r1.yz, -r2_abs.z, v1.xxyw, r1
    cmp r1.yz, -r2_abs.w, v1.xzww, r1
    texld_pp r2, r1.yzzw, s4
    mul_pp r2.x, r2.w, r2.x
    mad_pp r1.yz, r2.xxyw, c0.x, c0.y
    nrm_pp r2.xyz, v6
    mul_pp r2.xyz, r1.z, r2
    nrm_pp r3.xyz, v5
    mad_pp r2.xyz, r1.y, r3, r2
    dp2add_sat_pp r1.y, r1.yzzw, r1.yzzw, c2.x
    add r1.y, -r1.y, c2.y
    rsq r1.y, r1.y
    rcp_pp r1.y, r1.y
    nrm_pp r3.xyz, v3
    mad_pp r1.yzw, r1.y, r3.xxyz, r2.xxyz
    mul r2, r1.z, c91
    mad r2, r1.y, c90, r2
    mad r2, r1.w, c92, r2
    dp4 r2.z, r2, r2
    rsq r2.z, r2.z
    mul r2.xy, r2.z, r2
    mad_pp r2.xy, r2, c1.yzzw, c1.y
    texld_pp r2, r2, s6
    mul r2.w, c64.z, c64.x
    mov r3.xz, c64
    mad r3.x, r3.x, -r3.z, r3.z
    mad_pp r2.w, c77.w, r3.x, r2.w
    frc r3.xyz, c26
    cmp r4.xyz, -r3, c2.x, c2.y
    add r3.xyz, -r3, c26
    cmp r4.xyz, c26, r1.x, r4
    add r3.xyz, r3, r4
    add r4, r3.z, -c2
    cmp r3.zw, -r4_abs.x, v0.xyxy, c2.x
    cmp r3.zw, -r4_abs.y, v0, r3
    cmp r3.zw, -r4_abs.z, v1.xyxy, r3
    cmp r3.zw, -r4_abs.w, v1, r3
    texld r4, r3.zwzw, s2
    mul r1.x, r4.w, c63.x
    mul r1.x, r2.w, r1.x
    mul_pp r2.xyz, r1.x, r2
    add_pp r5.xyz, c22, -v2
    dp3_pp r1.x, r5, r5
    rsq_pp r1.x, r1.x
    mad_pp r5.xyz, r5, r1.x, -c10
    nrm_pp r6.xyz, r5
    dp3_sat_pp r1.x, r6, r1.yzww
    mov r2.w, c0.w
    mul_pp r2.w, r2.w, c20.y
    exp_pp r2.w, r2.w
    mul_pp r2.w, r2.w, c1.x
    pow_pp r3.z, r1.x, r2.w
    mov r5, c77
    mul_pp r1.x, r5.w, c20.z
    mul_pp r1.x, r3.z, r1.x
    mul_pp r6.xyz, r1.x, c37
    mad_pp r2.xyz, r6, c18, r2
    mul_pp r2.xyz, r4, r2
    mul_pp r2.xyz, r2, v3.w
    cmp r3.zw, -r0_abs.x, v0.xyxy, c2.x
    cmp r0.xy, -r0_abs.y, v0.zwzw, r3.zwzw
    cmp r0.xy, -r0_abs.z, v1, r0
    cmp r0.xy, -r0_abs.w, v1.zwzw, r0
    texld_pp r0, r0, s5
    add r4, r3.x, -c2
    add r3, r3.y, -c2
    cmp r0.xz, -r4_abs.x, v0.xyyw, c2.x
    cmp r0.xz, -r4_abs.y, v0.zyww, r0
    cmp r0.xz, -r4_abs.z, v1.xyyw, r0
    cmp r0.xz, -r4_abs.w, v1.zyww, r0
    texld_pp r4, r0.xzzw, s0
    cmp r0.xz, -r3_abs.x, v0.xyyw, c2.x
    cmp r0.xz, -r3_abs.y, v0.zyww, r0
    cmp r0.xz, -r3_abs.z, v1.xyyw, r0
    cmp r0.xz, -r3_abs.w, v1.zyww, r0
    texld_pp r3, r0.xzzw, s1
    lrp_pp r6, r0.y, r4, r3
    mad_pp r0.xyz, r1.yzww, c0.z, c0.z
    mov r3.xyz, c80
    mad r3.xyz, r3, r0.y, c79
    mul_pp r4.xyz, r1.yzww, r1.yzww
    dp3_sat_pp r0.y, r1.yzww, -c10
    mul r0.y, r0.y, c77.w
    mul_pp r1.xyz, r0.y, c36
    mul r3.xyz, r3, r4.y
    mad r0.xyw, c78.xyzz, r0.x, r5.xyzz
    mov r5.xyz, c82
    mad r5.xyz, r5, r0.z, c81
    mad_pp r0.xyz, r4.x, r0.xyww, r3
    mad_pp r0.xyz, r4.z, r5, r0
    mad_pp r0.xyz, r0, c17, r1
    mul_pp r0.xyz, r0, c16
    mad_pp r0.xyz, r0, r6, r2
    mul_pp r0.w, r6.w, c16.w
    mul_pp r0, r0, v7
    texld_pp r1, v4.yxzw, s9
    mad_pp oC0.xyz, r0, r1.w, r1
    mov_pp oC0.w, r0.w

// approximately 119 instruction slots used (7 texture, 112 arithmetic)
