//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_Ambient;
//   float4 g_Diffuse;
//   float4 g_EyePosition;
//   sampler2D g_FramebufferSampler;
//   row_major float4x4 g_MtxView;
//   float4 g_OffsetParam;
//   float2 g_RefractionParam;
//   float4 g_ViewportSize;
//   float4 g_aLightField[6];
//   float2 mrgFresnelParam;
//   float4 mrgGlobalLight_Diffuse;
//   float4 mrgGlobalLight_Direction;
//   float4 mrgInShadowScale;
//   float4 mrgLuminanceRange;
//   sampler2D sampDLScatter;
//   sampler2D sampDif;
//   samplerCUBE sampEnv;
//   sampler2D sampNrm;
//   sampler2D sampOffset;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   mrgGlobalLight_Direction c10      1
//   g_Diffuse                c16      1
//   g_Ambient                c17      1
//   g_EyePosition            c22      1
//   g_ViewportSize           c24      1
//   mrgGlobalLight_Diffuse   c36      1
//   mrgFresnelParam          c62      1
//   mrgLuminanceRange        c63      1
//   mrgInShadowScale         c64      1
//   g_aLightField            c77      6
//   g_MtxView                c90      3
//   g_RefractionParam        c150     1
//   g_OffsetParam            c151     1
//   sampDif                  s0       1
//   sampNrm                  s2       1
//   sampEnv                  s3       1
//   sampOffset               s4       1
//   sampDLScatter            s9       1
//   g_FramebufferSampler     s11      1
//

    ps_3_0
    def c0, -1, 0.5, 1, 0
    def c1, 2, -2, -1, -0.707106769
    def c2, 0.5, -0.5, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1.xy
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_texcoord5 v4.xy
    dcl_texcoord7 v5.xyz
    dcl_texcoord8 v6.xyz
    dcl_color_pp v7
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    dcl_2d s9
    dcl_2d s11
    add r0.xy, c0.y, vPos
    mul r0.xy, r0, c24.zwzw
    mov r1.xzw, c0
    mad r2, c24.zzww, r1.zwwx, r1.wzxw
    mad r0.xy, r0, c1, r2
    add_pp r0.xy, r2.zwzw, r0
    mul r0.z, c150.x, c150.x
    nrm_pp r2.xyz, v5
    nrm_pp r3.xyz, v6
    add_pp r0.w, v7.w, v7.w
    texld_pp r4, v1, s4
    mad r1.xy, r4.wyzw, r0.w, c0.x
    mad r4, r1.xyxy, c151.xyxy, v0
    texld_pp r5, r4.zwzw, s2
    texld_pp r4, r4, s0
    mul_pp r5.x, r5.w, r5.x
    mad_pp r5.xy, r5, c1.x, c1.z
    mul_pp r3.xyz, r3, r5.y
    mad_pp r2.xyz, r5.x, r2, r3
    dp2add_sat_pp r0.w, r5, r5, c0.w
    add r0.w, -r0.w, c0.z
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    nrm_pp r3.xyz, v3
    mad r2.xyz, r0.w, r3, r2
    mul_pp r3.xyz, r2.y, c91
    mad_pp r3.xyz, r2.x, c90, r3
    mad_pp r3.xyz, r2.z, c92, r3
    mad r0.w, r3.z, -r3.z, c0.z
    mad r0.z, r0.z, -r0.w, c0.z
    cmp r0.w, r0.z, c0.z, c0.w
    mul r0.z, r0.w, r0.z
    mul r0.w, r0.w, c150.x
    rsq r0.z, r0.z
    rcp r0.z, r0.z
    mad r0.z, r0.w, -r3.z, r0.z
    mul_pp r0.zw, r3.xyxy, r0.z
    mad_pp r0.xy, r0.zwzw, c1.w, r0
    mad_pp r0.xy, r1, c151, r0
    mad r0.xy, r0, c2, c2.x
    texld_pp r0, r0, s11
    mad_pp r3.xyz, r2, c0.y, c0.y
    mov r5.xyz, c80
    mad r5.xyz, r5, r3.y, c79
    mul_pp r6.xyz, r2, r2
    mul r5.xyz, r5, r6.y
    mov r7.xyz, c77
    mad r3.xyw, c78.xyzz, r3.x, r7.xyzz
    mov r7.xyz, c82
    mad r7.xyz, r7, r3.z, c81
    mad_pp r3.xyz, r6.x, r3.xyww, r5
    mad_pp r3.xyz, r6.z, r7, r3
    dp3_sat_pp r0.w, r2, -c10
    mul r0.w, r0.w, c77.w
    mul_pp r5.xyz, r0.w, c36
    mad_pp r3.xyz, r3, c17, r5
    mul_pp r3.xyz, r3, c16
    mad r3.xyz, r3, r4, -r0
    mul_pp r0.w, r4.w, c16.w
    mul_pp r1.w, r0.w, v7.w
    mad r0.w, r0.w, -v7.w, c0.z
    mul r0.w, r0.w, c63.x
    mad_pp r0.xyz, r1.w, r3, r0
    add_pp r3.xyz, c22, -v2
    nrm r4.xyz, r3
    dp3 r1.w, -r4, r2
    add r1.w, r1.w, r1.w
    mad_pp r3.xyz, r2, -r1.w, -r4
    dp3_sat_pp r1.w, r2, r4
    add_pp r1.w, -r1.w, c0.z
    mad_pp r2.xy, r1, c151, r3
    mov_pp r2.z, -r3.z
    texld_pp r2, r2, s3
    mul r1.x, c64.z, c64.x
    mov r3.xz, c64
    mad r1.y, r3.x, -r3.z, r3.z
    mad_pp r1.x, c77.w, r1.y, r1.x
    mul r0.w, r0.w, r1.x
    mul_pp r2.xyz, r0.w, r2
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    lrp_pp r2.w, r0.w, r1.z, c62.x
    mad_pp r0.xyz, r2.w, r2, r0
    add r1.xyw, c0.x, v7.xyzz
    mad_pp r1.xyz, c16.w, r1.xyww, r1.z
    mul_pp r0.xyz, r0, r1
    texld_pp r1, v4.yxzw, s9
    mad_pp oC0.xyz, r0, r1.w, r1
    mov_pp oC0.w, c0.z

// approximately 99 instruction slots used (6 texture, 93 arithmetic)
