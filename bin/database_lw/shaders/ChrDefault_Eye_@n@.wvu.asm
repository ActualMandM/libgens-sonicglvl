//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_EyePosition;
//   float4 g_LightScatteringFarNearScale;
//   row_major float4x4 g_MtxLightViewProjection;
//   row_major float3x4 g_MtxPalette[25];
//   row_major float4x4 g_MtxProjection;
//   row_major float4x4 g_MtxView;
//   row_major float4x4 g_MtxWorld;
//   float4 g_SonicEyeHighLightPosition;
//   float2 mrgFresnelParam;
//   float4 mrgGlobalLight_Direction;
//   bool mrgHasBone;
//   float4 mrgTexcoordIndex[4];
//   float4 mrgTexcoordOffset[2];
//   float4 mrgZOffsetRate;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   mrgHasBone                    b15      1
//   g_MtxLightViewProjection      c24      4
//   g_MtxPalette                  c28     75
//   g_EyePosition                 c178     1
//   mrgGlobalLight_Direction      c183     1
//   mrgTexcoordIndex              c187     1
//   mrgTexcoordOffset             c191     1
//   mrgFresnelParam               c193     1
//   mrgZOffsetRate                c195     1
//   g_LightScatteringFarNearScale c199     1
//   g_MtxProjection               c224     4
//   g_MtxView                     c228     4
//   g_MtxWorld                    c232     4
//   g_SonicEyeHighLightPosition   c246     1
//

    vs_3_0
    def c4, 3, 0.5, -0.5, 0
    def c0, 1, 0, 0, 0
    def c1, 0, 1, 0, 0
    def c2, 0, 0, 1, 0
    def c3, 0, 0, 0, 1
    dcl_position v0
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2 v3
    dcl_texcoord3 v4
    dcl_color v5
    dcl_normal v6
    dcl_tangent v7
    dcl_binormal v8
    dcl_blendweight v9
    dcl_blendindices v10
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord6 o6
    dcl_texcoord7 o7
    dcl_color o8
    dcl_texcoord8 o9
    frc r0.x, c187.x
    slt r0.y, -r0.x, r0.x
    add r0.x, -r0.x, c187.x
    slt r0.z, c187.x, -c187.x
    mad r0.x, r0.z, r0.y, r0.x
    mova a0.x, r0.x
    mul r0.xy, v1, c0[a0.x].x
    mad r0.xy, c0[a0.x].y, v2, r0
    mad r0.xy, c0[a0.x].z, v3, r0
    mad r0.xy, c0[a0.x].w, v4, r0
    add o1.xy, r0, c191
    if b15
      add r0.x, -v9.x, c0.x
      add r0.x, r0.x, -v9.y
      add r0.x, r0.x, -v9.z
      mul r1, v10, c4.x
      mova a0, r1.yxzw
      mul r2, v9.y, c30[a0.x]
      mad r2, v9.x, c30[a0.y], r2
      mad r2, v9.z, c30[a0.z], r2
      mad r1, r0.x, c30[a0.w], r2
      dp3 r0.y, r1, v6
      mad r2, v0.xyzx, c0.xxxw, c0.yyzx
      dp4 r0.z, r1, r2
      mul r3, v9.y, c28[a0.x]
      mad r3, v9.x, c28[a0.y], r3
      mad r3, v9.z, c28[a0.z], r3
      mad r3, r0.x, c28[a0.w], r3
      dp4 r0.w, r3, r2
      dp3 r1.w, r3, v6
      dp3 r3.w, r3, v7
      mul r4, v9.y, c29[a0.x]
      mad r4, v9.x, c29[a0.y], r4
      mad r4, v9.z, c29[a0.z], r4
      mad r4, r0.x, c29[a0.w], r4
      dp4 r0.x, r4, r2
      dp3 r2.x, r4, v6
      dp3 r2.y, r4, v7
      dp3 r2.z, r1, v7
      dp3 r2.w, r3, -v8
      dp3 r3.x, r4, -v8
      dp3 r1.x, r1, -v8
      mov r4.x, c28.z
      mov r4.y, c29.z
      mov r4.z, c30.z
    else
      add r4.xyz, -c246, v0
      mov r3.w, v7.x
      mov r2.yz, v7
      mov r2.w, -v8.x
      mov r3.x, -v8.y
      mov r1.x, -v8.z
      mov r1.w, v6.x
      mov r2.x, v6.y
      mov r0.y, v6.z
      mov r0.xzw, v0.yyzx
    endif
    mul r5.xyz, r2.y, c233
    mad r3.yzw, r3.w, c232.xxyz, r5.xxyz
    mad o2.xyz, r2.z, c234, r3.yzww
    mul r3.xyz, r3.x, c233
    mad r2.yzw, r2.w, c232.xxyz, r3.xxyz
    mad o3.xyz, r1.x, c234, r2.yzww
    mul r1.xyz, r2.x, c233
    mad r1.xyz, r1.w, c232, r1
    mad r1.xyz, r0.y, c234, r1
    nrm r2.xyz, r1
    mov o4.xyz, r2
    mul r1, r0.x, c233
    mad r1, r0.w, c232, r1
    mad r0, r0.z, c234, r1
    add r0, r0, c235
    mul r1.xyz, r4.y, c233
    mad r1.xyz, r4.x, c232, r1
    mad r1.xyz, r4.z, c234, r1
    mul r3.xyz, r1.y, c229
    mad r1.xyw, r1.x, c228.xyzz, r3.xyzz
    mad r1.xyz, r1.z, c230, r1.xyww
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o6.xyz, r1.w, r1
    abs r1.x, c195.x
    sge r1.x, -r1.x, r1.x
    mov r3.xyw, c0
    add r1.y, r3.x, -c193.x
    add r4.xyz, -r0, c178
    nrm r5.xyz, r4
    dp3_sat r1.z, r2, r5
    add r1.z, -r1.z, c0.x
    mul r1.w, r1.z, r1.z
    mul r1.w, r1.w, r1.w
    mul r1.z, r1.z, r1.w
    mad o4.w, r1.z, r1.y, c193.x
    mul r2, r0.y, c229
    mad r2, r0.x, c228, r2
    mad r2, r0.z, c230, r2
    mad r2, r0.w, c231, r2
    mad r3, c195.x, r3.yyxw, r2
    mul r1.yz, r3.y, c225.xzww
    mad r1.yz, r3.x, c224.xzww, r1
    mad r1.yz, r3.z, c226.xzww, r1
    mad r1.yz, r3.w, c227.xzww, r1
    rcp r0.w, r1.z
    mul r0.w, r0.w, r1.y
    mul r3, r2.y, c225
    mad r3, r2.x, c224, r3
    mad r3, r2.z, c226, r3
    mad r3, r2.w, c227, r3
    mov o0.xyw, r3
    mad r1.y, r0.w, -r3.w, r3.z
    mul r0.w, r0.w, r3.w
    mad o0.z, r1.x, r1.y, r0.w
    add r0.w, -r2.z, -c195.x
    mov o7, r0
    add r0.w, r0.w, -c199.y
    mul_sat o5.x, r0.w, c199.x
    dp3 r0.w, -c183, r5
    mad o5.y, r0.w, c4.y, c4.y
    mov o1.zw, c191.xyxy
    mov o2.w, c0.w
    mov o3.w, c0.w
    mov o5.zw, c0.w
    mov o6.w, c0.w
    mov o8, v5
    mul r1, r0.y, c25
    mad r1, r0.x, c24, r1
    mad r0, r0.z, c26, r1
    add r0, r0, c27
    mul r1.xyz, r0.xyww, c4.yzyw
    add o9.xy, r1.z, r1
    mov o9.zw, r0

// approximately 137 instruction slots used
