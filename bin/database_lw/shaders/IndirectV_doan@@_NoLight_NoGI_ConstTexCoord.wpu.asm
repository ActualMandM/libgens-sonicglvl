//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_Ambient;
//   float4 g_Diffuse;
//   float4 g_OffsetParam;
//   float4 g_aLightField[6];
//   float4 mrgGlobalLight_Diffuse;
//   float4 mrgGlobalLight_Direction;
//   float4 mrgTexcoordIndex[4];
//   sampler2D sampDLScatter;
//   sampler2D sampDif;
//   sampler2D sampNrm;
//   sampler2D sampOffset0;
//   sampler2D sampOffsetMask;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   mrgGlobalLight_Direction c10      1
//   g_Diffuse                c16      1
//   g_Ambient                c17      1
//   mrgTexcoordIndex         c26      2
//   mrgGlobalLight_Diffuse   c36      1
//   g_aLightField            c77      6
//   g_OffsetParam            c150     1
//   sampDif                  s0       1
//   sampNrm                  s2       1
//   sampOffset0              s3       1
//   sampOffsetMask           s5       1
//   sampDLScatter            s9       1
//

    ps_3_0
    def c0, 2, -1, 0.5, 0
    def c1, 0, 1, 2, 3
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord3 v2.xyz
    dcl_texcoord5 v3.xy
    dcl_texcoord7 v4.xyz
    dcl_texcoord8 v5.xyz
    dcl_color_pp v6
    dcl_2d s0
    dcl_2d s2
    dcl_2d s3
    dcl_2d s5
    dcl_2d s9
    frc r0.x, c26.x
    cmp r0.y, -r0.x, c1.x, c1.y
    add r0.x, -r0.x, c26.x
    mov r1.x, c1.x
    cmp r0.y, c26.x, r1.x, r0.y
    add r0.x, r0.y, r0.x
    add r0, r0.x, -c1
    cmp r1.yz, -r0_abs.x, v0.xxyw, c1.x
    cmp r0.xy, -r0_abs.y, v0.zwzw, r1.yzzw
    cmp r0.xy, -r0_abs.z, v1, r0
    cmp r0.xy, -r0_abs.w, v1.zwzw, r0
    texld r2, r0, s0
    frc r1.yzw, c27.xxyw
    cmp r2.xyz, -r1.yzww, c1.x, c1.y
    add r1.yzw, -r1, c27.xxyw
    cmp r2.xyz, c27.xyww, r1.x, r2
    add r1.xyz, r1.yzww, r2
    add r3, r1.z, -c1
    cmp r0.zw, -r3_abs.x, v0.xyxy, c1.x
    cmp r0.zw, -r3_abs.y, v0, r0
    cmp r0.zw, -r3_abs.z, v1.xyxy, r0
    cmp r0.zw, -r3_abs.w, v1, r0
    texld r3, r0.zwzw, s5
    dp2add_pp r0.z, v6.w, r3.y, c1.x
    mul_pp r0.z, r2.w, r0.z
    add r2, r1.y, -c1
    add r1, r1.x, -c1
    cmp r3.xy, -r2_abs.x, v0, c1.x
    cmp r2.xy, -r2_abs.y, v0.zwzw, r3
    cmp r2.xy, -r2_abs.z, v1, r2
    cmp r2.xy, -r2_abs.w, v1.zwzw, r2
    texld_pp r2, r2, s3
    mad r0.zw, r2.xywy, r0.z, -c1.y
    mad r0.xy, r0.zwzw, c150, r0
    texld_pp r2, r0, s0
    mul_pp oC0.w, r2.w, c16.w
    cmp r0.xy, -r1_abs.x, v0, c1.x
    cmp r0.xy, -r1_abs.y, v0.zwzw, r0
    cmp r0.xy, -r1_abs.z, v1, r0
    cmp r0.xy, -r1_abs.w, v1.zwzw, r0
    mad r0.xy, r0.zwzw, c150, r0
    texld_pp r0, r0, s2
    mul_pp r0.x, r0.w, r0.x
    mad_pp r0.xy, r0, c0.x, c0.y
    nrm_pp r1.xyz, v5
    mul_pp r1.xyz, r0.y, r1
    nrm_pp r3.xyz, v4
    mad_pp r1.xyz, r0.x, r3, r1
    dp2add_sat_pp r0.x, r0, r0, c1.x
    add r0.x, -r0.x, c1.y
    rsq r0.x, r0.x
    rcp_pp r0.x, r0.x
    nrm_pp r3.xyz, v2
    mad_pp r0.xyz, r0.x, r3, r1
    mul_pp r1.xyz, r0, r0
    mad_pp r3.xyz, r0, c0.z, c0.z
    dp3_sat_pp r0.x, r0, -c10
    mul r0.x, r0.x, c77.w
    mul_pp r0.xyz, r0.x, c36
    mov r4.xyz, c77
    mad r4.xyz, c78, r3.x, r4
    mov r5.xyz, c80
    mad r3.xyw, r5.xyzz, r3.y, c79.xyzz
    mov r5.xyz, c82
    mad r5.xyz, r5, r3.z, c81
    mul r3.xyz, r1.y, r3.xyww
    mad_pp r1.xyw, r1.x, r4.xyzz, r3.xyzz
    mad_pp r1.xyz, r1.z, r5, r1.xyww
    mad_pp r0.xyz, r1, c17, r0
    mul_pp r0.xyz, r0, c16
    mad_pp r0.xyz, r0, r2, v6
    texld_pp r1, v3.yxzw, s9
    mad_pp oC0.xyz, r0, r1.w, r1

// approximately 81 instruction slots used (6 texture, 75 arithmetic)
