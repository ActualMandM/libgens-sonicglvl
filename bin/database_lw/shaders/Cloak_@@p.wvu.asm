//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_EyePosition;
//   row_major float3x4 g_MtxPalette[25];
//   row_major float4x4 g_MtxProjection;
//   row_major float4x4 g_MtxView;
//   row_major float4x4 g_MtxWorld;
//   bool mrgHasBone;
//   float4 mrgMorphWeight;
//   float4 mrgTexcoordOffset[2];
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   mrgHasBone        b15      1
//   g_MtxPalette      c28     75
//   g_EyePosition     c178     1
//   mrgTexcoordOffset c191     1
//   mrgMorphWeight    c194     1
//   g_MtxProjection   c224     4
//   g_MtxView         c228     4
//   g_MtxWorld        c232     4
//

    vs_3_0
    def c0, 3, 1, 0, 0
    dcl_position v0
    dcl_texcoord v1
    dcl_texcoord4 v2
    dcl_texcoord5 v3
    dcl_texcoord6 v4
    dcl_texcoord7 v5
    dcl_normal v6
    dcl_blendweight v7
    dcl_blendindices v8
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    mul r0.xyz, c194.y, v3
    mad r0.xyz, c194.x, v2, r0
    mad r0.xyz, c194.z, v4, r0
    mad r0.xyz, c194.w, v5, r0
    add r0.xyz, r0, v0
    if b15
      mul r1, c0.x, v8
      mova a0, r1.yxzw
      mul r2, v7.y, c30[a0.x]
      mad r2, c30[a0.y], v7.x, r2
      mad r2, c30[a0.z], v7.z, r2
      add r1.x, v7.y, v7.x
      add r1.x, r1.x, v7.z
      add r1.x, -r1.x, c0.y
      mad r2, c30[a0.w], r1.x, r2
      dp3 r1.y, r2, v6
      mov r0.w, v0.w
      dp4 r1.z, r2, r0
      mul r2, v7.y, c28[a0.x]
      mad r2, c28[a0.y], v7.x, r2
      mad r2, c28[a0.z], v7.z, r2
      mad r2, c28[a0.w], r1.x, r2
      dp3 r1.w, r2, v6
      dp4 r2.x, r2, r0
      mul r3, v7.y, c29[a0.x]
      mad r3, c29[a0.y], v7.x, r3
      mad r3, c29[a0.z], v7.z, r3
      mad r3, c29[a0.w], r1.x, r3
      dp4 r0.y, r3, r0
      dp3 r0.w, r3, v6
      mov r0.x, r2.x
      mov r0.z, r1.z
      mov r1.x, v0.w
    else
      mov r1.x, v0.w
      mov r0.w, v6.y
      mov r1.yw, v6.xzzx
    endif
    mul r2, r0.y, c233
    mad r2, r0.x, c232, r2
    mad r2, r0.z, c234, r2
    mad r2, r1.x, c235, r2
    mul r0.xyz, r0.w, c233
    mad r0.xyz, r1.w, c232, r0
    mad r0.xyz, r1.y, c234, r0
    nrm r1.xyz, r0
    add r3.xyz, -r2, c178
    nrm r4.xyz, r3
    dp3_sat r0.w, r1, r4
    mul r1, r2.y, c229
    mad r1, r2.x, c228, r1
    mad r1, r2.z, c230, r1
    mad r1, r2.w, c231, r1
    mul r2, r1.y, c225
    mad r2, r1.x, c224, r2
    mad r2, r1.z, c226, r2
    mad o0, r1.w, c227, r2
    mul r1.xyz, r0.y, c229
    mad r1.xyz, r0.x, c228, r1
    mad o2.xyz, r0.z, c230, r1
    add o1.zw, r0.w, c191.xyxy
    mov o1.xy, v1

// approximately 68 instruction slots used
