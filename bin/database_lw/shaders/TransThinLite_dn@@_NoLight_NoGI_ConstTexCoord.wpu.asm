//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_Ambient;
//   float4 g_Diffuse;
//   float4 g_TransColorMask;
//   float4 g_aLightField[6];
//   float4 mrgGlobalLight_Diffuse;
//   float4 mrgGlobalLight_Direction;
//   float4 mrgTexcoordIndex[4];
//   sampler2D sampDLScatter;
//   sampler2D sampDif;
//   sampler2D sampNrm;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   mrgGlobalLight_Direction c10      1
//   g_Diffuse                c16      1
//   g_Ambient                c17      1
//   mrgTexcoordIndex         c26      2
//   mrgGlobalLight_Diffuse   c36      1
//   g_aLightField            c77      6
//   g_TransColorMask         c150     1
//   sampDif                  s0       1
//   sampNrm                  s2       1
//   sampDLScatter            s9       1
//

    ps_3_0
    def c0, 2, -1, 0.5, 0
    def c1, 0, 1, 2, 3
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord3_pp v2.xyz
    dcl_texcoord5 v3.xy
    dcl_texcoord7 v4.xyz
    dcl_texcoord8 v5.xyz
    dcl vFace
    dcl_2d s0
    dcl_2d s2
    dcl_2d s9
    frc r0.x, c26.x
    cmp r0.y, -r0.x, c1.x, c1.y
    add r0.x, -r0.x, c26.x
    mov r1.x, c1.x
    cmp r0.y, c26.x, r1.x, r0.y
    add r0.x, r0.y, r0.x
    add r0, r0.x, -c1
    cmp r1.yz, -r0_abs.x, v0.xxyw, c1.x
    cmp r0.xy, -r0_abs.y, v0.zwzw, r1.yzzw
    cmp r0.xy, -r0_abs.z, v1, r0
    cmp r0.xy, -r0_abs.w, v1.zwzw, r0
    texld_pp r0, r0, s0
    mul_pp oC0.w, r0.w, c16.w
    frc r0.w, c27.x
    cmp r1.y, -r0.w, c1.x, c1.y
    add r0.w, -r0.w, c27.x
    cmp r1.x, c27.x, r1.x, r1.y
    add r0.w, r0.w, r1.x
    add r1, r0.w, -c1
    cmp r2.xy, -r1_abs.x, v0, c1.x
    cmp r1.xy, -r1_abs.y, v0.zwzw, r2
    cmp r1.xy, -r1_abs.z, v1, r1
    cmp r1.xy, -r1_abs.w, v1.zwzw, r1
    texld_pp r1, r1, s2
    mul_pp r1.x, r1.w, r1.x
    mad_pp r1.xy, r1, c0.x, c0.y
    nrm_pp r2.xyz, v5
    mul_pp r2.xyz, r1.y, r2
    nrm_pp r3.xyz, v4
    mad_pp r2.xyz, r1.x, r3, r2
    dp2add_sat_pp r0.w, r1, r1, c1.x
    add r0.w, -r0.w, c1.y
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp r1.xyz, vFace, v2, -v2
    nrm_pp r3.xyz, r1
    mad_pp r1.xyz, r0.w, r3, r2
    mad_pp r2.xyz, r1, c0.z, c0.z
    mov r3, c77
    mad r3.xyz, c78, r2.x, r3
    mul_pp r4.xyz, r1, r1
    dp3_pp r0.w, r1, -c10
    mov r1.xyz, c80
    mad r1.xyz, r1, r2.y, c79
    mov r5.xyz, c82
    mad r2.xyz, r5, r2.z, c81
    mul r1.xyz, r1, r4.y
    mad_pp r1.xyz, r4.x, r3, r1
    mad_pp r1.xyz, r4.z, r2, r1
    mov_sat_pp r1.w, r0.w
    mov_sat_pp r0.w, -r0.w
    mul r2.xyz, r3.w, c36
    mul_pp r3.xyz, r1.w, r2
    mul_pp r2.xyz, r0.w, r2
    mul_pp r2.xyz, r2, c16
    mul_pp r2.xyz, r0, r2
    mul r2.xyz, r2, c150
    mul_pp r3.xyz, r3, c16
    mad_pp r1.xyz, r1, c17, r3
    mad_pp r0.xyz, r1, r0, r2
    texld_pp r1, v3.yxzw, s9
    mad_pp oC0.xyz, r0, r1.w, r1

// approximately 69 instruction slots used (3 texture, 66 arithmetic)
