//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_ViewportSize;
//   sampler2D s0;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   g_ViewportSize c24      1
//   s0             s0       1
//

    ps_3_0
    def c0, 1.9632107, 0.25, -0.0833333358, 0.200000003
    def c1, 1.33333337, 0.666666687, -2.5, 2.5
    def c2, 0.5, 0, -1, 1
    def c3, 4, 0, 0, 0
    dcl vPos.xy
    dcl_2d s0
    add r0.xy, c2.x, vPos
    mul r1.xy, r0, c24.zwzw
    mov r2.yzw, c2
    mad r3, c24.zwzw, r2.wzzw, r1.xyxy
    mul r4, r3.zwxx, c2.wwyy
    mul r3, r3.xyxx, c2.wwyy
    texldl r3, r3, s0
    mad r0.z, r3.y, c0.x, r3.x
    texldl r3, r4, s0
    mad r0.w, r3.y, c0.x, r3.x
    mad r3, c24.zwzw, r2.wyyw, r1.xyxy
    mul r4, r3.zwxx, c2.wwyy
    mul r3, r3.xyxx, c2.wwyy
    texldl r3, r3, s0
    texldl r4, r4, s0
    mad r2.x, r4.y, c0.x, r4.x
    mul r3.w, r2.x, -c2.x
    mad r3.w, r0.w, c0.y, r3.w
    mov r5.zw, c2.y
    mad r5.xy, r0, c24.zwzw, c24.zwzw
    texldl r5, r5, s0
    mad r4.w, r5.y, c0.x, r5.x
    mad r3.w, r4.w, c0.y, r3.w
    mov r5.zw, c2.y
    mad r5.xy, r0, c24.zwzw, -c24.zwzw
    texldl r5, r5, s0
    mad r5.x, r5.y, c0.x, r5.x
    mad r6, c24.zwzw, r2.yzzy, r1.xyxy
    mul r7, r6.xyxx, c2.wwyy
    mul r6, r6.zwxx, c2.wwyy
    texldl r6, r6, s0
    texldl r7, r7, s0
    mad r2.z, r7.y, c0.x, r7.x
    add r5.yzw, r6.xxyz, r7.xxyz
    mad r6.x, r6.y, c0.x, r6.x
    add r5.yzw, r3.xxyz, r5
    mad r3.x, r3.y, c0.x, r3.x
    add r4.xyz, r4, r5.yzww
    mul r3.y, r2.z, -c2.x
    mad r3.y, r5.x, c0.y, r3.y
    mad r3.y, r0.z, c0.y, r3.y
    mov r1.zw, c2.y
    texldl r1, r1, s0
    mad r1.w, r1.y, c0.x, r1.x
    mad r3.z, r6.x, c2.x, -r1.w
    mad r3.z, r3.x, c2.x, r3.z
    add r3.y, r3_abs.z, r3_abs.y
    add r3.y, r3_abs.w, r3.y
    mul r3.z, r3.x, -c2.x
    mad r0.z, r0.z, c0.y, r3.z
    mad r0.z, r4.w, c0.y, r0.z
    mul r3.z, r6.x, -c2.x
    mad r3.z, r5.x, c0.y, r3.z
    mad r0.w, r0.w, c0.y, r3.z
    mad r3.z, r2.z, c2.x, -r1.w
    mad r3.z, r2.x, c2.x, r3.z
    add r0.w, r0_abs.w, r3_abs.z
    add r0.z, r0_abs.z, r0.w
    add r0.z, -r3.y, r0.z
    cmp r0.w, r0.z, r2.z, r6.x
    add r3.y, -r1.w, r0.w
    add r0.w, r1.w, r0.w
    mul r0.w, r0.w, c2.x
    cmp r3.z, r0.z, r2.x, r3.x
    add r3.w, -r1.w, r3.z
    add r3.z, r1.w, r3.z
    mul r3.z, r3.z, c2.x
    add r4.w, -r3_abs.w, r3_abs.y
    max r5.x, r3_abs.y, r3_abs.w
    cmp r0.w, r4.w, r0.w, r3.z
    cmp r3.y, r0.z, -c24.w, -c24.z
    cmp r3.y, r4.w, r3.y, -r3.y
    mul r3.z, r3.y, c2.x
    cmp r3.w, r0.z, c2.y, r3.z
    cmp r3.z, r0.z, r3.z, c2.y
    mad r5.w, r0.y, c24.w, r3.z
    mad r5.z, r0.x, c24.z, r3.w
    mul r3.zw, r2.xywy, c24.z
    mul r2.yw, r2, c24.xzzw
    cmp r2.yw, r0.z, r3.xzzw, r2
    mad r7, r2.ywyw, c1.zzww, r5.zwzw
    mul r3.zw, r2.xyyw, c3.x
    texldd r8, r7, s0, r3.zwzw, r3.zwzw
    mad r8.z, r8.y, c0.x, r8.x
    texldd r9, r7.zwzw, s0, r3.zwzw, r3.zwzw
    mad r8.w, r9.y, c0.x, r9.x
    add r5.yz, -r0.w, r8.xzww
    mad r5.yz, r5.x, -c0.y, r5_abs
    mad r6.yz, r2.xyww, -c3.x, r7.xxyw
    cmp r9.xy, r5.y, r7, r6.yzzw
    mad r6.yz, r2.xyww, c3.x, r7.xzww
    cmp r9.zw, r5.z, r7, r6.xyyz
    cmp r6.yz, r5, c2.w, c2.y
    mul r4.w, r6.z, r6.y
    cmp r9, -r4.w, r9, r7
    texldd r10, r9, s0, r3.zwzw, r3.zwzw
    texldd r11, r9.zwzw, s0, r3.zwzw, r3.zwzw
    mad r3.z, r11.y, c0.x, r11.x
    cmp r11.w, r5.z, r8.w, r3.z
    mad r3.z, r10.y, c0.x, r10.x
    cmp r11.z, r5.y, r8.z, r3.z
    add r3.zw, -r0.w, r11
    mad r3.zw, r5.x, -c0.y, r3_abs
    cmp r3.zw, r3, c2.w, c2.y
    add r3.zw, r3, r6.xyyz
    mad r5.xy, r2.ywzw, -c3.x, r9
    mad r2.yw, r2, c3.x, r9.xzzw
    cmp r10.zw, -r3.w, r2.xyyw, r9
    cmp r10.xy, -r3.z, r5, r9
    cmp r2.y, -r3.w, -c2.y, -c2.w
    cmp r2.y, -r3.z, -c2.y, r2.y
    cmp r5, r2.y, r10, r9
    mov r8.xy, r9.zwzw
    mov r11.xy, r5.zwzw
    cmp r2.yw, -r4.w, r5.xxzy, r7.xxzy
    cmp r5, -r4.w, r11, r8
    mad r2.yw, r0.xxzy, c24.xzzw, -r2
    cmp r2.y, r0.z, r2.y, r2.w
    mad r3.zw, r0.xyxy, -c24, r5.xyxy
    cmp r2.w, r0.z, r3.z, r3.w
    add r3.z, -r2.w, r2.y
    cmp r3.z, r3.z, r5.w, r5.z
    add r3.z, -r0.w, r3.z
    add r0.w, -r0.w, r1.w
    cmp r0.w, r0.w, c2.y, c2.w
    cmp r3.z, r3.z, -c2.y, -c2.w
    add r0.w, r0.w, r3.z
    cmp r0.w, -r0_abs.w, c2.y, r3.y
    add r3.y, r2.y, r2.w
    min r3.z, r2.w, r2.y
    rcp r2.y, r3.y
    mad r2.y, r3.z, -r2.y, c2.x
    mul r0.w, r0.w, r2.y
    cmp r2.y, r0.z, c2.y, r0.w
    cmp r0.z, r0.z, r0.w, c2.y
    mad r5.y, r0.y, c24.w, r0.z
    mad r5.x, r0.x, c24.z, r2.y
    mov r5.zw, c2.y
    texldl r0, r5, s0
    add r3.yzw, r1.xxyz, r4.xxyz
    mul r3.yzw, r3, c0.w
    min r0.w, r6.x, r2.z
    min r4.x, r3.x, r2.x
    min r2.y, r4.x, r0.w
    min r0.w, r2.y, r1.w
    max r4.x, r2.z, r6.x
    add r2.y, r2.z, r6.x
    add r2.y, r3.x, r2.y
    max r4.y, r2.x, r3.x
    add r2.x, r2.x, r2.y
    mad r2.x, r2.x, c0.y, -r1.w
    max r2.y, r4.x, r4.y
    max r3.x, r1.w, r2.y
    add r0.w, -r0.w, r3.x
    mul r1.w, r3.x, c0.y
    min r2.y, -r1.w, c0.z
    add r1.w, r0.w, r2.y
    rcp r0.w, r0.w
    mad r0.w, r2_abs.x, r0.w, -c0.y
    mul r2.x, r0.w, c1.x
    cmp r0.w, r0.w, r2.x, c2.y
    min r2.x, r0.w, c1.y
    mad r2.yzw, r3, r2.x, r0.xxyz
    mad r0.xyz, -r2.x, r0, r2.yzww
    cmp oC0.xyz, r1.w, r0, r1
    mov oC0.w, c2.w

// approximately 184 instruction slots used (24 texture, 160 arithmetic)
