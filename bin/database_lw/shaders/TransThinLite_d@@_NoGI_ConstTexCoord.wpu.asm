//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_Ambient;
//   float4 g_Diffuse;
//   float4 g_TransColorMask;
//   float4 g_aLightField[6];
//   float4 mrgGlobalLight_Diffuse;
//   float4 mrgGlobalLight_Direction;
//   float4 mrgLocalLight1_Color;
//   float4 mrgLocalLight1_Position;
//   float4 mrgLocalLight1_Range;
//   float4 mrgLocalLight2_Color;
//   float4 mrgLocalLight2_Position;
//   float4 mrgLocalLight2_Range;
//   float4 mrgLocalLight3_Color;
//   float4 mrgLocalLight3_Position;
//   float4 mrgLocalLight3_Range;
//   float4 mrgLocalLight4_Color;
//   float4 mrgLocalLight4_Position;
//   float4 mrgLocalLight4_Range;
//   float4 mrgTexcoordIndex[4];
//   sampler2D sampDLScatter;
//   sampler2D sampDif;
//
//
// Registers:
//
//   Name                     Reg   Size
//   ------------------------ ----- ----
//   mrgGlobalLight_Direction c10      1
//   g_Diffuse                c16      1
//   g_Ambient                c17      1
//   mrgTexcoordIndex         c26      1
//   mrgGlobalLight_Diffuse   c36      1
//   mrgLocalLight1_Position  c42      1
//   mrgLocalLight1_Color     c43      1
//   mrgLocalLight1_Range     c44      1
//   mrgLocalLight2_Position  c46      1
//   mrgLocalLight2_Color     c47      1
//   mrgLocalLight2_Range     c48      1
//   mrgLocalLight3_Position  c50      1
//   mrgLocalLight3_Color     c51      1
//   mrgLocalLight3_Range     c52      1
//   mrgLocalLight4_Position  c54      1
//   mrgLocalLight4_Color     c55      1
//   mrgLocalLight4_Range     c56      1
//   g_aLightField            c77      6
//   g_TransColorMask         c150     1
//   sampDif                  s0       1
//   sampDLScatter            s9       1
//

    ps_3_0
    def c0, 0.5, 0, 0, 0
    def c1, 0, 1, 2, 3
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord5 v4.xy
    dcl vFace
    dcl_2d s0
    dcl_2d s9
    frc r0.x, c26.x
    cmp r0.y, -r0.x, c1.x, c1.y
    add r0.x, -r0.x, c26.x
    mov_pp r1.x, c1.x
    cmp r0.y, c26.x, r1.x, r0.y
    add r0.x, r0.y, r0.x
    add r0, r0.x, -c1
    cmp r1.xy, -r0_abs.x, v0, c1.x
    cmp r0.xy, -r0_abs.y, v0.zwzw, r1
    cmp r0.xy, -r0_abs.z, v1, r0
    cmp r0.xy, -r0_abs.w, v1.zwzw, r0
    texld_pp r0, r0, s0
    mul_pp oC0.w, r0.w, c16.w
    add_pp r1.xyz, -c46, v2
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    rcp_pp r1.w, r0.w
    mul_pp r1.xyz, r0.w, r1
    mad_sat_pp r0.w, -r1.w, c48.z, c48.w
    mul r2.xyz, r0.w, c47
    add_pp r3.xyz, -c42, v2
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    rcp_pp r1.w, r0.w
    mul_pp r3.xyz, r0.w, r3
    mad_sat_pp r0.w, -r1.w, c44.z, c44.w
    mul r4.xyz, r0.w, c43
    cmp_pp r5.xyz, vFace, v3, -v3
    nrm_pp r6.xyz, r5
    dp3_pp r0.w, r6, -r3
    mov_sat_pp r1.w, r0.w
    mov_sat_pp r0.w, -r0.w
    mul r3.xyz, r0.w, r4
    mul r4.xyz, r1.w, r4
    mov r5, c77
    mul r7.xyz, r5.w, c36
    dp3_pp r0.w, r6, -c10
    mov_sat_pp r1.w, r0.w
    mov_sat_pp r0.w, -r0.w
    mad_pp r3.xyz, r7, r0.w, r3
    mad_pp r4.xyz, r7, r1.w, r4
    dp3_pp r0.w, r6, -r1
    mov_sat_pp r1.x, r0.w
    mov_sat_pp r0.w, -r0.w
    mad_pp r1.yzw, r2.xxyz, r0.w, r3.xxyz
    mad_pp r2.xyz, r2, r1.x, r4
    add_pp r3.xyz, -c50, v2
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    rcp_pp r1.x, r0.w
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r6, -r3
    mad_sat_pp r1.x, -r1.x, c52.z, c52.w
    mul r3.xyz, r1.x, c51
    mov_sat_pp r1.x, r0.w
    mov_sat_pp r0.w, -r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, r1
    mad_pp r2.xyz, r3, r1.x, r2
    add_pp r3.xyz, -c54, v2
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    rcp_pp r1.x, r0.w
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r6, -r3
    mad_sat_pp r1.x, -r1.x, c56.z, c56.w
    mul r3.xyz, r1.x, c55
    mov_sat_pp r1.x, r0.w
    mov_sat_pp r0.w, -r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, r1
    mad_pp r2.xyz, r3, r1.x, r2
    mul_pp r2.xyz, r2, c16
    mul_pp r1.xyz, r1.yzww, c16
    mul_pp r1.xyz, r0, r1
    mul r1.xyz, r1, c150
    mad_pp r3.xyz, r6, c0.x, c0.x
    mul_pp r4.xyz, r6, r6
    mov r6.xyz, c80
    mad r6.xyz, r6, r3.y, c79
    mul r6.xyz, r4.y, r6
    mad r3.xyw, c78.xyzz, r3.x, r5.xyzz
    mov r5.xyz, c82
    mad r5.xyz, r5, r3.z, c81
    mad_pp r3.xyz, r4.x, r3.xyww, r6
    mad_pp r3.xyz, r4.z, r5, r3
    mad_pp r2.xyz, r3, c17, r2
    mad_pp r0.xyz, r2, r0, r1
    texld_pp r1, v4.yxzw, s9
    mad_pp oC0.xyz, r0, r1.w, r1

// approximately 90 instruction slots used (2 texture, 88 arithmetic)
