//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_EyePosition;
//   float4 g_LightScatteringFarNearScale;
//   row_major float3x4 g_MtxPalette[25];
//   row_major float4x4 g_MtxProjection;
//   row_major float4x4 g_MtxView;
//   float2 mrgFresnelParam;
//   float4 mrgGlobalLight_Direction;
//   bool mrgHasBone;
//   float4 mrgTexcoordOffset[2];
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   mrgHasBone                    b15      1
//   g_MtxPalette                  c28     75
//   g_EyePosition                 c178     1
//   mrgGlobalLight_Direction      c183     1
//   mrgTexcoordOffset             c191     1
//   mrgFresnelParam               c193     1
//   g_LightScatteringFarNearScale c199     1
//   g_MtxProjection               c224     4
//   g_MtxView                     c228     4
//

    vs_3_0
    def c0, 1, 3, 0, 0.5
    dcl_position v0
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_color v3
    dcl_normal v4
    dcl_tangent v5
    dcl_binormal v6
    dcl_blendweight v7
    dcl_blendindices v8
    dcl_texcoord4 v9
    dcl_texcoord5 v10
    dcl_texcoord6 v11
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord5 o5
    dcl_texcoord7 o6
    dcl_texcoord8 o7
    dcl_color o8
    if b15
      add r0.x, c0.x, -v7.x
      add r0.x, r0.x, -v7.y
      add r0.x, r0.x, -v7.z
      mul r1, c0.y, v8
      mova a0, r1.yxzw
      mul r2, v7.y, c30[a0.x]
      mad r2, v7.x, c30[a0.y], r2
      mad r2, v7.z, c30[a0.z], r2
      mad r1, r0.x, c30[a0.w], r2
      dp3 r2.z, r1, v4
      mad r3, v0.xyzx, c0.xxxz, c0.zzzx
      dp4 r4.z, r1, r3
      mul r5, v7.y, c28[a0.x]
      mad r5, v7.x, c28[a0.y], r5
      mad r5, v7.z, c28[a0.z], r5
      mad r5, r0.x, c28[a0.w], r5
      dp4 r4.x, r5, r3
      dp3 r2.x, r5, v4
      dp3 r6.x, r5, v5
      mul r7, v7.y, c29[a0.x]
      mad r7, v7.x, c29[a0.y], r7
      mad r7, v7.z, c29[a0.z], r7
      mad r0, r0.x, c29[a0.w], r7
      dp4 r4.y, r0, r3
      dp3 r2.y, r0, v4
      dp3 r6.y, r0, v5
      dp3 r6.z, r1, v5
      dp3 r3.x, r5, -v6
      dp3 r3.y, r0, -v6
      dp3 r3.z, r1, -v6
    else
      mov r6.xyz, v5
      mov r3.xyz, -v6
      mov r2.xyz, v4
      mov r4.xyz, v0
    endif
    mul r0.xy, v10, v10
    mad r0.z, v10.x, -v10.x, -r0.y
    mad r0.z, v10.z, v10.z, r0.z
    mad r0.z, v10.w, v10.w, r0.z
    add r0.w, r0.y, r0.x
    mad r0.w, v10.z, v10.z, r0.w
    mad r0.w, v10.w, v10.w, r0.w
    rcp r0.w, r0.w
    mul r0.z, r0.w, r0.z
    mul r1.z, r0.z, v9.w
    mul r5.xy, v10.zwzw, v10.yxzw
    add r0.z, r5.y, r5.x
    mul r0.z, r0.z, r0.w
    mul r0.z, r0.z, v9.w
    add r1.y, r0.z, r0.z
    mul r7, v10.ywzw, v10.xzxy
    mad r5.xz, v10.x, v10.zyyw, -r7.wyyw
    mul r5.xz, r0.w, r5
    mul r5.xz, r5, v9.w
    add r8.xy, r5.xzzw, r5.xzzw
    mov r1.x, r8.x
    dp3 r9.z, r2, r1
    dp3 o6.z, r6, r1
    dp3 o7.z, r3, r1
    mov r4.w, c0.x
    mov r1.w, v9.z
    dp4 r1.z, r4, r1
    mad r0.z, v10.y, v10.z, -r5.y
    add r5.xy, r7.ywzw, r7.xzzw
    mul r5.xy, r0.w, r5
    mul r5.xy, r5, v9.w
    add r5.xy, r5, r5
    mov r8.z, r5.y
    mad r0.xy, v10, v10, -r0.yxzw
    mad r0.xy, v10.z, -v10.z, r0
    mad r0.xy, v10.w, v10.w, r0
    mul r0.xyz, r0.wwzw, r0.xyww
    mul r7.xy, r0, v9.w
    mov r8.x, r7.x
    dp3 r9.x, r2, r8
    mul r0.x, r0.z, v9.w
    add r7.z, r0.x, r0.x
    mov r7.x, r5.x
    dp3 r9.y, r2, r7
    nrm r0.xyz, r9
    mov o4.xyz, r0
    mov r7.w, v9.y
    dp4 r1.y, r4, r7
    mov r8.w, v9.x
    dp4 r1.x, r4, r8
    mov r2.xy, v1
    mul r4, r1.y, c229
    mad r4, r1.x, c228, r4
    mad r4, r1.z, c230, r4
    add r4, r4, c231
    mov r1.w, -r4.z
    mov o3, r1
    mov r2.zw, v2.xyxy
    add o1, r2, c191
    mul r2, r4.y, c225
    mad r2, r4.x, c224, r2
    mad r2, r4.z, c226, r2
    mad o0, r4.w, c227, r2
    add r0.w, r1.w, -c199.y
    mul_sat o5.x, r0.w, c199.x
    mov r2.x, c0.x
    add r0.w, r2.x, -c193.x
    add r1.xyz, -r1, c178
    nrm r2.xyz, r1
    dp3_sat r0.x, r0, r2
    add r0.x, -r0.x, c0.x
    mul r0.y, r0.x, r0.x
    mul r0.y, r0.y, r0.y
    mul r0.y, r0.x, r0.y
    mad o4.w, r0.y, r0.w, c193.x
    mov o5.w, r0.x
    dp3 r0.x, -c183, r2
    mad o5.y, r0.x, c0.w, c0.w
    dp3 o6.x, r6, r8
    dp3 o7.x, r3, r8
    dp3 o6.y, r6, r7
    dp3 o7.y, r3, r7
    mov o2, v11
    mov o5.z, c0.z
    mov o6.w, c0.z
    mov o7.w, c0.z
    mov o8, v3

// approximately 130 instruction slots used
