//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_EyePosition;
//   float4 g_LightScatteringFarNearScale;
//   row_major float3x4 g_MtxPalette[25];
//   row_major float4x4 g_MtxProjection;
//   row_major float4x4 g_MtxView;
//   row_major float4x4 g_MtxWorld;
//   float4 mrgGlobalLight_Direction;
//   bool mrgHasBone;
//   float4 mrgTexcoordOffset[2];
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   mrgHasBone                    b15      1
//   g_MtxPalette                  c28     75
//   g_EyePosition                 c178     1
//   mrgGlobalLight_Direction      c183     1
//   mrgTexcoordOffset             c191     2
//   g_LightScatteringFarNearScale c199     1
//   g_MtxProjection               c224     4
//   g_MtxView                     c228     4
//   g_MtxWorld                    c232     4
//

    vs_3_0
    def c0, 1, 3, 0, 0.5
    def c1, 0.600000024, 0.400000006, 0, 0
    dcl_position v0
    dcl_texcoord v1
    dcl_texcoord1 v2
    dcl_texcoord2 v3
    dcl_texcoord3 v4
    dcl_normal v5
    dcl_tangent v6
    dcl_binormal v7
    dcl_blendweight v8
    dcl_blendindices v9
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8
    mov o5.w, c0.z
    mov o7.w, c0.z
    mov r0.xy, v3
    mov r0.zw, v4.xyxy
    add o2, r0, c192
    mov r0.xy, v1
    mov r0.zw, v2.xyxy
    add o1, r0, c191
    mov o4.w, c0.z
    if b15
      add r0.x, c0.x, -v8.x
      add r0.x, r0.x, -v8.y
      add r0.x, r0.x, -v8.z
      mul r1, c0.y, v9
      mova a0, r1.yxzw
      mul r2, v8.y, c30[a0.x]
      mad r2, v8.x, c30[a0.y], r2
      mad r2, v8.z, c30[a0.z], r2
      mad r1, r0.x, c30[a0.w], r2
      dp3 r0.y, r1, v5
      mad r2, v0.xyzx, c0.xxxz, c0.zzzx
      dp4 r0.z, r1, r2
      mul r3, v8.y, c28[a0.x]
      mad r3, v8.x, c28[a0.y], r3
      mad r3, v8.z, c28[a0.z], r3
      mad r3, r0.x, c28[a0.w], r3
      dp4 r0.w, r3, r2
      dp3 r1.w, r3, v5
      dp3 r3.w, r3, v6
      mul r4, v8.y, c29[a0.x]
      mad r4, v8.x, c29[a0.y], r4
      mad r4, v8.z, c29[a0.z], r4
      mad r4, r0.x, c29[a0.w], r4
      dp4 r0.x, r4, r2
      dp3 r2.x, r4, v5
      dp3 r2.y, r4, v6
      dp3 r2.z, r1, v6
      dp3 r2.w, r3, -v7
      dp3 r3.x, r4, -v7
      dp3 r1.x, r1, -v7
    else
      mov r3.w, v6.x
      mov r2.yz, v6
      mov r2.w, -v7.x
      mov r3.x, -v7.y
      mov r1.x, -v7.z
      mov r1.w, v5.x
      mov r2.x, v5.y
      mov r0.y, v5.z
      mov r0.xzw, v0.yyzx
    endif
    mul r4, r0.x, c233
    mad r4, r0.w, c232, r4
    mad r4, r0.z, c234, r4
    add r4, r4, c235
    mul r5, r4.y, c229
    mad r5, r4.x, c228, r5
    mad r5, r4.z, c230, r5
    mad r5, r4.w, c231, r5
    mul r6, r5.y, c225
    mad r6, r5.x, c224, r6
    mad r6, r5.z, c226, r6
    mad o0, r5.w, c227, r6
    mov o3.xyz, r4
    mul r0.xzw, r2.y, c233.xyyz
    mad r0.xzw, r3.w, c232.xyyz, r0
    mad r0.xzw, r2.z, c234.xyyz, r0
    mov o4.xyz, r0.xzww
    mul r2.xyz, r2.x, c233
    mad r1.yzw, r1.w, c232.xxyz, r2.xxyz
    mad r1.yzw, r0.y, c234.xxyz, r1
    nrm r2.xyz, r1.yzww
    mov o6.xyz, r2
    mul r1.yzw, r3.x, c233.xxyz
    mad r1.yzw, r2.w, c232.xxyz, r1
    mad r1.xyz, r1.x, c234, r1.yzww
    add r3.xyz, -r4, c178
    nrm r4.xyz, r3
    dp3 o7.y, r4, r1
    mov o5.xyz, r1
    mov o3.w, -r5.z
    add r0.y, -r5.z, -c199.y
    mul_sat o8.x, r0.y, c199.x
    dp3 r0.y, -c183, r4
    mad o8.y, r0.y, c0.w, c0.w
    dp3 r1.x, r2, r4
    mov o7.z, r1.x
    mov_sat r1.x, r1.x
    add r0.y, -r1.x, c0.x
    mul r1.x, r0.y, r0.y
    mul r1.x, r1.x, r1.x
    mul r0.y, r0.y, r1.x
    mad o6.w, r0.y, c1.x, c1.y
    dp3 o7.x, r4, r0.xzww
    mov o8.zw, c0.z

// approximately 101 instruction slots used
